#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FitnessManagement.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Fitness")]
	public partial class FitnessDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActiveClassInPackage(ActiveClassInPackage instance);
    partial void UpdateActiveClassInPackage(ActiveClassInPackage instance);
    partial void DeleteActiveClassInPackage(ActiveClassInPackage instance);
    partial void InsertUserAtBranch(UserAtBranch instance);
    partial void UpdateUserAtBranch(UserAtBranch instance);
    partial void DeleteUserAtBranch(UserAtBranch instance);
    partial void InsertActiveClassRoomInBranch(ActiveClassRoomInBranch instance);
    partial void UpdateActiveClassRoomInBranch(ActiveClassRoomInBranch instance);
    partial void DeleteActiveClassRoomInBranch(ActiveClassRoomInBranch instance);
    partial void InsertActiveItemAtBranch(ActiveItemAtBranch instance);
    partial void UpdateActiveItemAtBranch(ActiveItemAtBranch instance);
    partial void DeleteActiveItemAtBranch(ActiveItemAtBranch instance);
    partial void InsertActivePackageAtBranch(ActivePackageAtBranch instance);
    partial void UpdateActivePackageAtBranch(ActivePackageAtBranch instance);
    partial void DeleteActivePackageAtBranch(ActivePackageAtBranch instance);
    partial void InsertAlert(Alert instance);
    partial void UpdateAlert(Alert instance);
    partial void DeleteAlert(Alert instance);
    partial void InsertArea(Area instance);
    partial void UpdateArea(Area instance);
    partial void DeleteArea(Area instance);
    partial void InsertAutoNumber(AutoNumber instance);
    partial void UpdateAutoNumber(AutoNumber instance);
    partial void DeleteAutoNumber(AutoNumber instance);
    partial void InsertBank(Bank instance);
    partial void UpdateBank(Bank instance);
    partial void DeleteBank(Bank instance);
    partial void InsertBillingDetail(BillingDetail instance);
    partial void UpdateBillingDetail(BillingDetail instance);
    partial void DeleteBillingDetail(BillingDetail instance);
    partial void InsertBillingHeader(BillingHeader instance);
    partial void UpdateBillingHeader(BillingHeader instance);
    partial void DeleteBillingHeader(BillingHeader instance);
    partial void InsertBillingType(BillingType instance);
    partial void UpdateBillingType(BillingType instance);
    partial void DeleteBillingType(BillingType instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertChangeStatusDocument(ChangeStatusDocument instance);
    partial void UpdateChangeStatusDocument(ChangeStatusDocument instance);
    partial void DeleteChangeStatusDocument(ChangeStatusDocument instance);
    partial void InsertCheckInLog(CheckInLog instance);
    partial void UpdateCheckInLog(CheckInLog instance);
    partial void DeleteCheckInLog(CheckInLog instance);
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertClassAttendance(ClassAttendance instance);
    partial void UpdateClassAttendance(ClassAttendance instance);
    partial void DeleteClassAttendance(ClassAttendance instance);
    partial void InsertClassPackage(ClassPackage instance);
    partial void UpdateClassPackage(ClassPackage instance);
    partial void DeleteClassPackage(ClassPackage instance);
    partial void InsertClassRoom(ClassRoom instance);
    partial void UpdateClassRoom(ClassRoom instance);
    partial void DeleteClassRoom(ClassRoom instance);
    partial void InsertClassScheduleDetail(ClassScheduleDetail instance);
    partial void UpdateClassScheduleDetail(ClassScheduleDetail instance);
    partial void DeleteClassScheduleDetail(ClassScheduleDetail instance);
    partial void InsertClassTimeSlot(ClassTimeSlot instance);
    partial void UpdateClassTimeSlot(ClassTimeSlot instance);
    partial void DeleteClassTimeSlot(ClassTimeSlot instance);
    partial void InsertConfiguration(Configuration instance);
    partial void UpdateConfiguration(Configuration instance);
    partial void DeleteConfiguration(Configuration instance);
    partial void InsertCreditCardType(CreditCardType instance);
    partial void UpdateCreditCardType(CreditCardType instance);
    partial void DeleteCreditCardType(CreditCardType instance);
    partial void InsertCustomerNote(CustomerNote instance);
    partial void UpdateCustomerNote(CustomerNote instance);
    partial void DeleteCustomerNote(CustomerNote instance);
    partial void InsertCustomerStatus(CustomerStatus instance);
    partial void UpdateCustomerStatus(CustomerStatus instance);
    partial void DeleteCustomerStatus(CustomerStatus instance);
    partial void InsertCustomerStatusHistory(CustomerStatusHistory instance);
    partial void UpdateCustomerStatusHistory(CustomerStatusHistory instance);
    partial void DeleteCustomerStatusHistory(CustomerStatusHistory instance);
    partial void InsertDocumentType(DocumentType instance);
    partial void UpdateDocumentType(DocumentType instance);
    partial void DeleteDocumentType(DocumentType instance);
    partial void InsertFormAccess(FormAccess instance);
    partial void UpdateFormAccess(FormAccess instance);
    partial void DeleteFormAccess(FormAccess instance);
    partial void InsertInstructor(Instructor instance);
    partial void UpdateInstructor(Instructor instance);
    partial void DeleteInstructor(Instructor instance);
    partial void InsertInstructorAttendance(InstructorAttendance instance);
    partial void UpdateInstructorAttendance(InstructorAttendance instance);
    partial void DeleteInstructorAttendance(InstructorAttendance instance);
    partial void InsertInvoiceDetail(InvoiceDetail instance);
    partial void UpdateInvoiceDetail(InvoiceDetail instance);
    partial void DeleteInvoiceDetail(InvoiceDetail instance);
    partial void InsertInvoiceHeader(InvoiceHeader instance);
    partial void UpdateInvoiceHeader(InvoiceHeader instance);
    partial void DeleteInvoiceHeader(InvoiceHeader instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertItemAccount(ItemAccount instance);
    partial void UpdateItemAccount(ItemAccount instance);
    partial void DeleteItemAccount(ItemAccount instance);
    partial void InsertItemType(ItemType instance);
    partial void UpdateItemType(ItemType instance);
    partial void DeleteItemType(ItemType instance);
    partial void InsertLogInHistory(LogInHistory instance);
    partial void UpdateLogInHistory(LogInHistory instance);
    partial void DeleteLogInHistory(LogInHistory instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertMonthlyClosing(MonthlyClosing instance);
    partial void UpdateMonthlyClosing(MonthlyClosing instance);
    partial void DeleteMonthlyClosing(MonthlyClosing instance);
    partial void InsertMonthlyClosingHistory(MonthlyClosingHistory instance);
    partial void UpdateMonthlyClosingHistory(MonthlyClosingHistory instance);
    partial void DeleteMonthlyClosingHistory(MonthlyClosingHistory instance);
    partial void InsertPackageDetail(PackageDetail instance);
    partial void UpdatePackageDetail(PackageDetail instance);
    partial void DeletePackageDetail(PackageDetail instance);
    partial void InsertPackageHeader(PackageHeader instance);
    partial void UpdatePackageHeader(PackageHeader instance);
    partial void DeletePackageHeader(PackageHeader instance);
    partial void InsertPaymentDetail(PaymentDetail instance);
    partial void UpdatePaymentDetail(PaymentDetail instance);
    partial void DeletePaymentDetail(PaymentDetail instance);
    partial void InsertPaymentHeader(PaymentHeader instance);
    partial void UpdatePaymentHeader(PaymentHeader instance);
    partial void DeletePaymentHeader(PaymentHeader instance);
    partial void InsertPaymentType(PaymentType instance);
    partial void UpdatePaymentType(PaymentType instance);
    partial void DeletePaymentType(PaymentType instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertRoleMenu(RoleMenu instance);
    partial void UpdateRoleMenu(RoleMenu instance);
    partial void DeleteRoleMenu(RoleMenu instance);
    partial void InsertCreditCardChangeHistory(CreditCardChangeHistory instance);
    partial void UpdateCreditCardChangeHistory(CreditCardChangeHistory instance);
    partial void DeleteCreditCardChangeHistory(CreditCardChangeHistory instance);
    partial void InsertSalesTarget(SalesTarget instance);
    partial void UpdateSalesTarget(SalesTarget instance);
    partial void DeleteSalesTarget(SalesTarget instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertInvoiceAccrualHeader(InvoiceAccrualHeader instance);
    partial void UpdateInvoiceAccrualHeader(InvoiceAccrualHeader instance);
    partial void DeleteInvoiceAccrualHeader(InvoiceAccrualHeader instance);
    partial void InsertInvoiceAccrualDetail(InvoiceAccrualDetail instance);
    partial void UpdateInvoiceAccrualDetail(InvoiceAccrualDetail instance);
    partial void DeleteInvoiceAccrualDetail(InvoiceAccrualDetail instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertPaymentAccrualDetail(PaymentAccrualDetail instance);
    partial void UpdatePaymentAccrualDetail(PaymentAccrualDetail instance);
    partial void DeletePaymentAccrualDetail(PaymentAccrualDetail instance);
    partial void InsertPaymentAccrualHeader(PaymentAccrualHeader instance);
    partial void UpdatePaymentAccrualHeader(PaymentAccrualHeader instance);
    partial void DeletePaymentAccrualHeader(PaymentAccrualHeader instance);
    partial void InsertClassRunning(ClassRunning instance);
    partial void UpdateClassRunning(ClassRunning instance);
    partial void DeleteClassRunning(ClassRunning instance);
    partial void InsertProspect(Prospect instance);
    partial void UpdateProspect(Prospect instance);
    partial void DeleteProspect(Prospect instance);
    partial void InsertProspectFollowUp(ProspectFollowUp instance);
    partial void UpdateProspectFollowUp(ProspectFollowUp instance);
    partial void DeleteProspectFollowUp(ProspectFollowUp instance);
    partial void InsertSchool(School instance);
    partial void UpdateSchool(School instance);
    partial void DeleteSchool(School instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    #endregion
		
		public FitnessDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FitnessConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FitnessDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FitnessDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FitnessDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FitnessDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActiveClassInPackage> ActiveClassInPackages
		{
			get
			{
				return this.GetTable<ActiveClassInPackage>();
			}
		}
		
		public System.Data.Linq.Table<UserAtBranch> UserAtBranches
		{
			get
			{
				return this.GetTable<UserAtBranch>();
			}
		}
		
		public System.Data.Linq.Table<ActiveClassRoomInBranch> ActiveClassRoomInBranches
		{
			get
			{
				return this.GetTable<ActiveClassRoomInBranch>();
			}
		}
		
		public System.Data.Linq.Table<ActiveItemAtBranch> ActiveItemAtBranches
		{
			get
			{
				return this.GetTable<ActiveItemAtBranch>();
			}
		}
		
		public System.Data.Linq.Table<ActivePackageAtBranch> ActivePackageAtBranches
		{
			get
			{
				return this.GetTable<ActivePackageAtBranch>();
			}
		}
		
		public System.Data.Linq.Table<Alert> Alerts
		{
			get
			{
				return this.GetTable<Alert>();
			}
		}
		
		public System.Data.Linq.Table<Area> Areas
		{
			get
			{
				return this.GetTable<Area>();
			}
		}
		
		public System.Data.Linq.Table<AutoNumber> AutoNumbers
		{
			get
			{
				return this.GetTable<AutoNumber>();
			}
		}
		
		public System.Data.Linq.Table<Bank> Banks
		{
			get
			{
				return this.GetTable<Bank>();
			}
		}
		
		public System.Data.Linq.Table<BillingDetail> BillingDetails
		{
			get
			{
				return this.GetTable<BillingDetail>();
			}
		}
		
		public System.Data.Linq.Table<BillingHeader> BillingHeaders
		{
			get
			{
				return this.GetTable<BillingHeader>();
			}
		}
		
		public System.Data.Linq.Table<BillingType> BillingTypes
		{
			get
			{
				return this.GetTable<BillingType>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<ChangeStatusDocument> ChangeStatusDocuments
		{
			get
			{
				return this.GetTable<ChangeStatusDocument>();
			}
		}
		
		public System.Data.Linq.Table<CheckInLog> CheckInLogs
		{
			get
			{
				return this.GetTable<CheckInLog>();
			}
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<ClassAttendance> ClassAttendances
		{
			get
			{
				return this.GetTable<ClassAttendance>();
			}
		}
		
		public System.Data.Linq.Table<ClassPackage> ClassPackages
		{
			get
			{
				return this.GetTable<ClassPackage>();
			}
		}
		
		public System.Data.Linq.Table<ClassRoom> ClassRooms
		{
			get
			{
				return this.GetTable<ClassRoom>();
			}
		}
		
		public System.Data.Linq.Table<ClassScheduleDetail> ClassScheduleDetails
		{
			get
			{
				return this.GetTable<ClassScheduleDetail>();
			}
		}
		
		public System.Data.Linq.Table<ClassTimeSlot> ClassTimeSlots
		{
			get
			{
				return this.GetTable<ClassTimeSlot>();
			}
		}
		
		public System.Data.Linq.Table<Configuration> Configurations
		{
			get
			{
				return this.GetTable<Configuration>();
			}
		}
		
		public System.Data.Linq.Table<CreditCardType> CreditCardTypes
		{
			get
			{
				return this.GetTable<CreditCardType>();
			}
		}
		
		public System.Data.Linq.Table<CustomerNote> CustomerNotes
		{
			get
			{
				return this.GetTable<CustomerNote>();
			}
		}
		
		public System.Data.Linq.Table<CustomerStatus> CustomerStatus
		{
			get
			{
				return this.GetTable<CustomerStatus>();
			}
		}
		
		public System.Data.Linq.Table<CustomerStatusHistory> CustomerStatusHistories
		{
			get
			{
				return this.GetTable<CustomerStatusHistory>();
			}
		}
		
		public System.Data.Linq.Table<debug> debugs
		{
			get
			{
				return this.GetTable<debug>();
			}
		}
		
		public System.Data.Linq.Table<DocumentType> DocumentTypes
		{
			get
			{
				return this.GetTable<DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<FormAccess> FormAccesses
		{
			get
			{
				return this.GetTable<FormAccess>();
			}
		}
		
		public System.Data.Linq.Table<Instructor> Instructors
		{
			get
			{
				return this.GetTable<Instructor>();
			}
		}
		
		public System.Data.Linq.Table<InstructorAttendance> InstructorAttendances
		{
			get
			{
				return this.GetTable<InstructorAttendance>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this.GetTable<InvoiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceHeader> InvoiceHeaders
		{
			get
			{
				return this.GetTable<InvoiceHeader>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<ItemAccount> ItemAccounts
		{
			get
			{
				return this.GetTable<ItemAccount>();
			}
		}
		
		public System.Data.Linq.Table<ItemType> ItemTypes
		{
			get
			{
				return this.GetTable<ItemType>();
			}
		}
		
		public System.Data.Linq.Table<LogInHistory> LogInHistories
		{
			get
			{
				return this.GetTable<LogInHistory>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<MonthlyClosing> MonthlyClosings
		{
			get
			{
				return this.GetTable<MonthlyClosing>();
			}
		}
		
		public System.Data.Linq.Table<MonthlyClosingHistory> MonthlyClosingHistories
		{
			get
			{
				return this.GetTable<MonthlyClosingHistory>();
			}
		}
		
		public System.Data.Linq.Table<PackageDetail> PackageDetails
		{
			get
			{
				return this.GetTable<PackageDetail>();
			}
		}
		
		public System.Data.Linq.Table<PackageHeader> PackageHeaders
		{
			get
			{
				return this.GetTable<PackageHeader>();
			}
		}
		
		public System.Data.Linq.Table<PaymentDetail> PaymentDetails
		{
			get
			{
				return this.GetTable<PaymentDetail>();
			}
		}
		
		public System.Data.Linq.Table<PaymentHeader> PaymentHeaders
		{
			get
			{
				return this.GetTable<PaymentHeader>();
			}
		}
		
		public System.Data.Linq.Table<PaymentType> PaymentTypes
		{
			get
			{
				return this.GetTable<PaymentType>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<RoleMenu> RoleMenus
		{
			get
			{
				return this.GetTable<RoleMenu>();
			}
		}
		
		public System.Data.Linq.Table<AllCustomersDetail> AllCustomersDetails
		{
			get
			{
				return this.GetTable<AllCustomersDetail>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceSummary> InvoiceSummaries
		{
			get
			{
				return this.GetTable<InvoiceSummary>();
			}
		}
		
		public System.Data.Linq.Table<ContractStatus> ContractStatus
		{
			get
			{
				return this.GetTable<ContractStatus>();
			}
		}
		
		public System.Data.Linq.Table<CreditCardChangeHistory> CreditCardChangeHistories
		{
			get
			{
				return this.GetTable<CreditCardChangeHistory>();
			}
		}
		
		public System.Data.Linq.Table<SalesTarget> SalesTargets
		{
			get
			{
				return this.GetTable<SalesTarget>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceAccrualHeader> InvoiceAccrualHeaders
		{
			get
			{
				return this.GetTable<InvoiceAccrualHeader>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceAccrualDetail> InvoiceAccrualDetails
		{
			get
			{
				return this.GetTable<InvoiceAccrualDetail>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contracts
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<PaymentAccrualDetail> PaymentAccrualDetails
		{
			get
			{
				return this.GetTable<PaymentAccrualDetail>();
			}
		}
		
		public System.Data.Linq.Table<PaymentAccrualHeader> PaymentAccrualHeaders
		{
			get
			{
				return this.GetTable<PaymentAccrualHeader>();
			}
		}
		
		public System.Data.Linq.Table<ClassRunning> ClassRunnings
		{
			get
			{
				return this.GetTable<ClassRunning>();
			}
		}
		
		public System.Data.Linq.Table<Prospect> Prospects
		{
			get
			{
				return this.GetTable<Prospect>();
			}
		}
		
		public System.Data.Linq.Table<ProspectFollowUp> ProspectFollowUps
		{
			get
			{
				return this.GetTable<ProspectFollowUp>();
			}
		}
		
		public System.Data.Linq.Table<School> Schools
		{
			get
			{
				return this.GetTable<School>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_ClassRunningCopyAttendanceFromDate")]
		public int proc_ClassRunningCopyAttendanceFromDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentClassRunningID", DbType="Int")] System.Nullable<int> currentClassRunningID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CopyFromClassRunningID", DbType="Int")] System.Nullable<int> copyFromClassRunningID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentClassRunningID, copyFromClassRunningID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.func_GetTotalInvoice", IsComposable=true)]
		public System.Nullable<decimal> func_GetTotalInvoice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvoiceNo", DbType="VarChar(30)")] string invoiceNo)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), invoiceNo).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActiveClassInPackage")]
	public partial class ActiveClassInPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassID;
		
		private int _PackageID;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<PackageHeader> _PackageHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    #endregion
		
		public ActiveClassInPackage()
		{
			this._Class = default(EntityRef<Class>);
			this._PackageHeader = default(EntityRef<PackageHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._PackageHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ActiveClassInPackage", Storage="_Class", ThisKey="ClassID", OtherKey="ID", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.ActiveClassInPackages.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.ActiveClassInPackages.Add(this);
						this._ClassID = value.ID;
					}
					else
					{
						this._ClassID = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageHeader_ActiveClassInPackage", Storage="_PackageHeader", ThisKey="PackageID", OtherKey="ID", IsForeignKey=true)]
		public PackageHeader PackageHeader
		{
			get
			{
				return this._PackageHeader.Entity;
			}
			set
			{
				PackageHeader previousValue = this._PackageHeader.Entity;
				if (((previousValue != value) 
							|| (this._PackageHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageHeader.Entity = null;
						previousValue.ActiveClassInPackages.Remove(this);
					}
					this._PackageHeader.Entity = value;
					if ((value != null))
					{
						value.ActiveClassInPackages.Add(this);
						this._PackageID = value.ID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("PackageHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAtBranch")]
	public partial class UserAtBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private int _BranchID;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    #endregion
		
		public UserAtBranch()
		{
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_UserAtBranch", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.UserAtBranches.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.UserAtBranches.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActiveClassRoomInBranch")]
	public partial class ActiveClassRoomInBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassRoomID;
		
		private int _BranchID;
		
		private short _Capacity;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<ClassRoom> _ClassRoom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassRoomIDChanging(int value);
    partial void OnClassRoomIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnCapacityChanging(short value);
    partial void OnCapacityChanged();
    #endregion
		
		public ActiveClassRoomInBranch()
		{
			this._Branch = default(EntityRef<Branch>);
			this._ClassRoom = default(EntityRef<ClassRoom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRoomID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClassRoomID
		{
			get
			{
				return this._ClassRoomID;
			}
			set
			{
				if ((this._ClassRoomID != value))
				{
					if (this._ClassRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassRoomIDChanging(value);
					this.SendPropertyChanging();
					this._ClassRoomID = value;
					this.SendPropertyChanged("ClassRoomID");
					this.OnClassRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="SmallInt NOT NULL")]
		public short Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ActiveClassRoomInBranch", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.ActiveClassRoomInBranches.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.ActiveClassRoomInBranches.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassRoom_ActiveClassRoomInBranch", Storage="_ClassRoom", ThisKey="ClassRoomID", OtherKey="ID", IsForeignKey=true)]
		public ClassRoom ClassRoom
		{
			get
			{
				return this._ClassRoom.Entity;
			}
			set
			{
				ClassRoom previousValue = this._ClassRoom.Entity;
				if (((previousValue != value) 
							|| (this._ClassRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassRoom.Entity = null;
						previousValue.ActiveClassRoomInBranches.Remove(this);
					}
					this._ClassRoom.Entity = value;
					if ((value != null))
					{
						value.ActiveClassRoomInBranches.Add(this);
						this._ClassRoomID = value.ID;
					}
					else
					{
						this._ClassRoomID = default(int);
					}
					this.SendPropertyChanged("ClassRoom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActiveItemAtBranch")]
	public partial class ActiveItemAtBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _BranchID;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    #endregion
		
		public ActiveItemAtBranch()
		{
			this._Branch = default(EntityRef<Branch>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ActiveItemAtBranch", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.ActiveItemAtBranches.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.ActiveItemAtBranches.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ActiveItemAtBranch", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.ActiveItemAtBranches.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.ActiveItemAtBranches.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivePackageAtBranch")]
	public partial class ActivePackageAtBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageID;
		
		private int _BranchID;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<PackageHeader> _PackageHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    #endregion
		
		public ActivePackageAtBranch()
		{
			this._Branch = default(EntityRef<Branch>);
			this._PackageHeader = default(EntityRef<PackageHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._PackageHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ActivePackageAtBranch", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.ActivePackageAtBranches.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.ActivePackageAtBranches.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageHeader_ActivePackageAtBranch", Storage="_PackageHeader", ThisKey="PackageID", OtherKey="ID", IsForeignKey=true)]
		public PackageHeader PackageHeader
		{
			get
			{
				return this._PackageHeader.Entity;
			}
			set
			{
				PackageHeader previousValue = this._PackageHeader.Entity;
				if (((previousValue != value) 
							|| (this._PackageHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageHeader.Entity = null;
						previousValue.ActivePackageAtBranches.Remove(this);
					}
					this._PackageHeader.Entity = value;
					if ((value != null))
					{
						value.ActivePackageAtBranches.Add(this);
						this._PackageID = value.ID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("PackageHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alert")]
	public partial class Alert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private bool _Active;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Alert()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Area")]
	public partial class Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Area()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Customer", Storage="_Customers", ThisKey="ID", OtherKey="AreaID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Area = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutoNumber")]
	public partial class AutoNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FormCode;
		
		private int _BranchID;
		
		private int _Year;
		
		private int _LastNumber;
		
		private string _Description;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormCodeChanging(string value);
    partial void OnFormCodeChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnLastNumberChanging(int value);
    partial void OnLastNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AutoNumber()
		{
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormCode", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FormCode
		{
			get
			{
				return this._FormCode;
			}
			set
			{
				if ((this._FormCode != value))
				{
					this.OnFormCodeChanging(value);
					this.SendPropertyChanging();
					this._FormCode = value;
					this.SendPropertyChanged("FormCode");
					this.OnFormCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNumber", DbType="Int NOT NULL")]
		public int LastNumber
		{
			get
			{
				return this._LastNumber;
			}
			set
			{
				if ((this._LastNumber != value))
				{
					this.OnLastNumberChanging(value);
					this.SendPropertyChanging();
					this._LastNumber = value;
					this.SendPropertyChanged("LastNumber");
					this.OnLastNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_AutoNumber", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.AutoNumbers.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.AutoNumbers.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bank")]
	public partial class Bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private EntitySet<CreditCardChangeHistory> _CreditCardChangeHistories;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    #endregion
		
		public Bank()
		{
			this._CreditCardChangeHistories = new EntitySet<CreditCardChangeHistory>(new Action<CreditCardChangeHistory>(this.attach_CreditCardChangeHistories), new Action<CreditCardChangeHistory>(this.detach_CreditCardChangeHistories));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_CreditCardChangeHistory", Storage="_CreditCardChangeHistories", ThisKey="ID", OtherKey="BankID")]
		public EntitySet<CreditCardChangeHistory> CreditCardChangeHistories
		{
			get
			{
				return this._CreditCardChangeHistories;
			}
			set
			{
				this._CreditCardChangeHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Customer", Storage="_Customers", ThisKey="ID", OtherKey="BankID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CreditCardChangeHistories(CreditCardChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.Bank = this;
		}
		
		private void detach_CreditCardChangeHistories(CreditCardChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.Bank = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Bank = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Bank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillingDetail")]
	public partial class BillingDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BillingID;
		
		private int _PackageID;
		
		private int _ContractID;
		
		private int _CustomerID;
		
		private int _InvoiceID;
		
		private decimal _Amount;
		
		private string _BillingResult;
		
		private EntityRef<BillingHeader> _BillingHeader;
		
		private EntityRef<InvoiceHeader> _InvoiceHeader;
		
		private EntityRef<PackageHeader> _PackageHeader;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBillingIDChanging(int value);
    partial void OnBillingIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBillingResultChanging(string value);
    partial void OnBillingResultChanged();
    #endregion
		
		public BillingDetail()
		{
			this._BillingHeader = default(EntityRef<BillingHeader>);
			this._InvoiceHeader = default(EntityRef<InvoiceHeader>);
			this._PackageHeader = default(EntityRef<PackageHeader>);
			this._Contract = default(EntityRef<Contract>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingID", DbType="Int NOT NULL")]
		public int BillingID
		{
			get
			{
				return this._BillingID;
			}
			set
			{
				if ((this._BillingID != value))
				{
					if (this._BillingHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillingIDChanging(value);
					this.SendPropertyChanging();
					this._BillingID = value;
					this.SendPropertyChanged("BillingID");
					this.OnBillingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._PackageHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int NOT NULL")]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL")]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(20,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingResult", DbType="VarChar(5)")]
		public string BillingResult
		{
			get
			{
				return this._BillingResult;
			}
			set
			{
				if ((this._BillingResult != value))
				{
					this.OnBillingResultChanging(value);
					this.SendPropertyChanging();
					this._BillingResult = value;
					this.SendPropertyChanged("BillingResult");
					this.OnBillingResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingHeader_BillingDetail", Storage="_BillingHeader", ThisKey="BillingID", OtherKey="ID", IsForeignKey=true)]
		public BillingHeader BillingHeader
		{
			get
			{
				return this._BillingHeader.Entity;
			}
			set
			{
				BillingHeader previousValue = this._BillingHeader.Entity;
				if (((previousValue != value) 
							|| (this._BillingHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillingHeader.Entity = null;
						previousValue.BillingDetails.Remove(this);
					}
					this._BillingHeader.Entity = value;
					if ((value != null))
					{
						value.BillingDetails.Add(this);
						this._BillingID = value.ID;
					}
					else
					{
						this._BillingID = default(int);
					}
					this.SendPropertyChanged("BillingHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceHeader_BillingDetail", Storage="_InvoiceHeader", ThisKey="InvoiceID", OtherKey="ID", IsForeignKey=true)]
		public InvoiceHeader InvoiceHeader
		{
			get
			{
				return this._InvoiceHeader.Entity;
			}
			set
			{
				InvoiceHeader previousValue = this._InvoiceHeader.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceHeader.Entity = null;
						previousValue.BillingDetails.Remove(this);
					}
					this._InvoiceHeader.Entity = value;
					if ((value != null))
					{
						value.BillingDetails.Add(this);
						this._InvoiceID = value.ID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageHeader_BillingDetail", Storage="_PackageHeader", ThisKey="PackageID", OtherKey="ID", IsForeignKey=true)]
		public PackageHeader PackageHeader
		{
			get
			{
				return this._PackageHeader.Entity;
			}
			set
			{
				PackageHeader previousValue = this._PackageHeader.Entity;
				if (((previousValue != value) 
							|| (this._PackageHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageHeader.Entity = null;
						previousValue.BillingDetails.Remove(this);
					}
					this._PackageHeader.Entity = value;
					if ((value != null))
					{
						value.BillingDetails.Add(this);
						this._PackageID = value.ID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("PackageHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_BillingDetail", Storage="_Contract", ThisKey="ContractID", OtherKey="ID", IsForeignKey=true)]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.BillingDetails.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.BillingDetails.Add(this);
						this._ContractID = value.ID;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_BillingDetail", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.BillingDetails.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.BillingDetails.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillingHeader")]
	public partial class BillingHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BatchNo;
		
		private int _BranchID;
		
		private int _BillingTypeID;
		
		private System.DateTime _ProcessDate;
		
		private System.Nullable<System.DateTime> _ResultProcessDate;
		
		private string _FileName;
		
		private string _UserName;
		
		private EntitySet<BillingDetail> _BillingDetails;
		
		private EntityRef<BillingType> _BillingType;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBatchNoChanging(string value);
    partial void OnBatchNoChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnBillingTypeIDChanging(int value);
    partial void OnBillingTypeIDChanged();
    partial void OnProcessDateChanging(System.DateTime value);
    partial void OnProcessDateChanged();
    partial void OnResultProcessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnResultProcessDateChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public BillingHeader()
		{
			this._BillingDetails = new EntitySet<BillingDetail>(new Action<BillingDetail>(this.attach_BillingDetails), new Action<BillingDetail>(this.detach_BillingDetails));
			this._BillingType = default(EntityRef<BillingType>);
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string BatchNo
		{
			get
			{
				return this._BatchNo;
			}
			set
			{
				if ((this._BatchNo != value))
				{
					this.OnBatchNoChanging(value);
					this.SendPropertyChanging();
					this._BatchNo = value;
					this.SendPropertyChanged("BatchNo");
					this.OnBatchNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingTypeID", DbType="Int NOT NULL")]
		public int BillingTypeID
		{
			get
			{
				return this._BillingTypeID;
			}
			set
			{
				if ((this._BillingTypeID != value))
				{
					if (this._BillingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BillingTypeID = value;
					this.SendPropertyChanged("BillingTypeID");
					this.OnBillingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessDate", DbType="DateTime NOT NULL")]
		public System.DateTime ProcessDate
		{
			get
			{
				return this._ProcessDate;
			}
			set
			{
				if ((this._ProcessDate != value))
				{
					this.OnProcessDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessDate = value;
					this.SendPropertyChanged("ProcessDate");
					this.OnProcessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultProcessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResultProcessDate
		{
			get
			{
				return this._ResultProcessDate;
			}
			set
			{
				if ((this._ResultProcessDate != value))
				{
					this.OnResultProcessDateChanging(value);
					this.SendPropertyChanging();
					this._ResultProcessDate = value;
					this.SendPropertyChanged("ResultProcessDate");
					this.OnResultProcessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingHeader_BillingDetail", Storage="_BillingDetails", ThisKey="ID", OtherKey="BillingID")]
		public EntitySet<BillingDetail> BillingDetails
		{
			get
			{
				return this._BillingDetails;
			}
			set
			{
				this._BillingDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingType_BillingHeader", Storage="_BillingType", ThisKey="BillingTypeID", OtherKey="ID", IsForeignKey=true)]
		public BillingType BillingType
		{
			get
			{
				return this._BillingType.Entity;
			}
			set
			{
				BillingType previousValue = this._BillingType.Entity;
				if (((previousValue != value) 
							|| (this._BillingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillingType.Entity = null;
						previousValue.BillingHeaders.Remove(this);
					}
					this._BillingType.Entity = value;
					if ((value != null))
					{
						value.BillingHeaders.Add(this);
						this._BillingTypeID = value.ID;
					}
					else
					{
						this._BillingTypeID = default(int);
					}
					this.SendPropertyChanged("BillingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BillingHeader", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.BillingHeaders.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.BillingHeaders.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillingDetails(BillingDetail entity)
		{
			this.SendPropertyChanging();
			entity.BillingHeader = this;
		}
		
		private void detach_BillingDetails(BillingDetail entity)
		{
			this.SendPropertyChanging();
			entity.BillingHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillingType")]
	public partial class BillingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private short _AutoPayDay;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<BillingHeader> _BillingHeaders;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAutoPayDayChanging(short value);
    partial void OnAutoPayDayChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public BillingType()
		{
			this._BillingHeaders = new EntitySet<BillingHeader>(new Action<BillingHeader>(this.attach_BillingHeaders), new Action<BillingHeader>(this.detach_BillingHeaders));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoPayDay", DbType="SmallInt NOT NULL")]
		public short AutoPayDay
		{
			get
			{
				return this._AutoPayDay;
			}
			set
			{
				if ((this._AutoPayDay != value))
				{
					this.OnAutoPayDayChanging(value);
					this.SendPropertyChanging();
					this._AutoPayDay = value;
					this.SendPropertyChanged("AutoPayDay");
					this.OnAutoPayDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingType_BillingHeader", Storage="_BillingHeaders", ThisKey="ID", OtherKey="BillingTypeID")]
		public EntitySet<BillingHeader> BillingHeaders
		{
			get
			{
				return this._BillingHeaders;
			}
			set
			{
				this._BillingHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingType_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="BillingTypeID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingType_Customer", Storage="_Customers", ThisKey="ID", OtherKey="BillingTypeID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillingHeaders(BillingHeader entity)
		{
			this.SendPropertyChanging();
			entity.BillingType = this;
		}
		
		private void detach_BillingHeaders(BillingHeader entity)
		{
			this.SendPropertyChanging();
			entity.BillingType = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.BillingType = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.BillingType = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.BillingType = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.BillingType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Address;
		
		private string _Email;
		
		private string _Phone;
		
		private string _MerchantCode;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<UserAtBranch> _UserAtBranches;
		
		private EntitySet<ActiveClassRoomInBranch> _ActiveClassRoomInBranches;
		
		private EntitySet<ActiveItemAtBranch> _ActiveItemAtBranches;
		
		private EntitySet<ActivePackageAtBranch> _ActivePackageAtBranches;
		
		private EntitySet<AutoNumber> _AutoNumbers;
		
		private EntitySet<BillingHeader> _BillingHeaders;
		
		private EntitySet<ChangeStatusDocument> _ChangeStatusDocuments;
		
		private EntitySet<CheckInLog> _CheckInLogs;
		
		private EntitySet<ClassScheduleDetail> _ClassScheduleDetails;
		
		private EntitySet<ClassTimeSlot> _ClassTimeSlots;
		
		private EntitySet<InvoiceHeader> _InvoiceHeaders;
		
		private EntitySet<SalesTarget> _SalesTargets;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<ClassRunning> _ClassRunnings;
		
		private EntitySet<Prospect> _Prospects;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMerchantCodeChanging(string value);
    partial void OnMerchantCodeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Branch()
		{
			this._UserAtBranches = new EntitySet<UserAtBranch>(new Action<UserAtBranch>(this.attach_UserAtBranches), new Action<UserAtBranch>(this.detach_UserAtBranches));
			this._ActiveClassRoomInBranches = new EntitySet<ActiveClassRoomInBranch>(new Action<ActiveClassRoomInBranch>(this.attach_ActiveClassRoomInBranches), new Action<ActiveClassRoomInBranch>(this.detach_ActiveClassRoomInBranches));
			this._ActiveItemAtBranches = new EntitySet<ActiveItemAtBranch>(new Action<ActiveItemAtBranch>(this.attach_ActiveItemAtBranches), new Action<ActiveItemAtBranch>(this.detach_ActiveItemAtBranches));
			this._ActivePackageAtBranches = new EntitySet<ActivePackageAtBranch>(new Action<ActivePackageAtBranch>(this.attach_ActivePackageAtBranches), new Action<ActivePackageAtBranch>(this.detach_ActivePackageAtBranches));
			this._AutoNumbers = new EntitySet<AutoNumber>(new Action<AutoNumber>(this.attach_AutoNumbers), new Action<AutoNumber>(this.detach_AutoNumbers));
			this._BillingHeaders = new EntitySet<BillingHeader>(new Action<BillingHeader>(this.attach_BillingHeaders), new Action<BillingHeader>(this.detach_BillingHeaders));
			this._ChangeStatusDocuments = new EntitySet<ChangeStatusDocument>(new Action<ChangeStatusDocument>(this.attach_ChangeStatusDocuments), new Action<ChangeStatusDocument>(this.detach_ChangeStatusDocuments));
			this._CheckInLogs = new EntitySet<CheckInLog>(new Action<CheckInLog>(this.attach_CheckInLogs), new Action<CheckInLog>(this.detach_CheckInLogs));
			this._ClassScheduleDetails = new EntitySet<ClassScheduleDetail>(new Action<ClassScheduleDetail>(this.attach_ClassScheduleDetails), new Action<ClassScheduleDetail>(this.detach_ClassScheduleDetails));
			this._ClassTimeSlots = new EntitySet<ClassTimeSlot>(new Action<ClassTimeSlot>(this.attach_ClassTimeSlots), new Action<ClassTimeSlot>(this.detach_ClassTimeSlots));
			this._InvoiceHeaders = new EntitySet<InvoiceHeader>(new Action<InvoiceHeader>(this.attach_InvoiceHeaders), new Action<InvoiceHeader>(this.detach_InvoiceHeaders));
			this._SalesTargets = new EntitySet<SalesTarget>(new Action<SalesTarget>(this.attach_SalesTargets), new Action<SalesTarget>(this.detach_SalesTargets));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._ClassRunnings = new EntitySet<ClassRunning>(new Action<ClassRunning>(this.attach_ClassRunnings), new Action<ClassRunning>(this.detach_ClassRunnings));
			this._Prospects = new EntitySet<Prospect>(new Action<Prospect>(this.attach_Prospects), new Action<Prospect>(this.detach_Prospects));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantCode", DbType="VarChar(20)")]
		public string MerchantCode
		{
			get
			{
				return this._MerchantCode;
			}
			set
			{
				if ((this._MerchantCode != value))
				{
					this.OnMerchantCodeChanging(value);
					this.SendPropertyChanging();
					this._MerchantCode = value;
					this.SendPropertyChanged("MerchantCode");
					this.OnMerchantCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_UserAtBranch", Storage="_UserAtBranches", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<UserAtBranch> UserAtBranches
		{
			get
			{
				return this._UserAtBranches;
			}
			set
			{
				this._UserAtBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ActiveClassRoomInBranch", Storage="_ActiveClassRoomInBranches", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<ActiveClassRoomInBranch> ActiveClassRoomInBranches
		{
			get
			{
				return this._ActiveClassRoomInBranches;
			}
			set
			{
				this._ActiveClassRoomInBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ActiveItemAtBranch", Storage="_ActiveItemAtBranches", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<ActiveItemAtBranch> ActiveItemAtBranches
		{
			get
			{
				return this._ActiveItemAtBranches;
			}
			set
			{
				this._ActiveItemAtBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ActivePackageAtBranch", Storage="_ActivePackageAtBranches", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<ActivePackageAtBranch> ActivePackageAtBranches
		{
			get
			{
				return this._ActivePackageAtBranches;
			}
			set
			{
				this._ActivePackageAtBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_AutoNumber", Storage="_AutoNumbers", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<AutoNumber> AutoNumbers
		{
			get
			{
				return this._AutoNumbers;
			}
			set
			{
				this._AutoNumbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BillingHeader", Storage="_BillingHeaders", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<BillingHeader> BillingHeaders
		{
			get
			{
				return this._BillingHeaders;
			}
			set
			{
				this._BillingHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ChangeStatusDocument", Storage="_ChangeStatusDocuments", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<ChangeStatusDocument> ChangeStatusDocuments
		{
			get
			{
				return this._ChangeStatusDocuments;
			}
			set
			{
				this._ChangeStatusDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_CheckInLog", Storage="_CheckInLogs", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<CheckInLog> CheckInLogs
		{
			get
			{
				return this._CheckInLogs;
			}
			set
			{
				this._CheckInLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ClassScheduleDetail", Storage="_ClassScheduleDetails", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<ClassScheduleDetail> ClassScheduleDetails
		{
			get
			{
				return this._ClassScheduleDetails;
			}
			set
			{
				this._ClassScheduleDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ClassTimeSlot", Storage="_ClassTimeSlots", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<ClassTimeSlot> ClassTimeSlots
		{
			get
			{
				return this._ClassTimeSlots;
			}
			set
			{
				this._ClassTimeSlots.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_InvoiceHeader", Storage="_InvoiceHeaders", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<InvoiceHeader> InvoiceHeaders
		{
			get
			{
				return this._InvoiceHeaders;
			}
			set
			{
				this._InvoiceHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_SalesTarget", Storage="_SalesTargets", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<SalesTarget> SalesTargets
		{
			get
			{
				return this._SalesTargets;
			}
			set
			{
				this._SalesTargets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Employee", Storage="_Employees", ThisKey="ID", OtherKey="HomeBranchID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ClassRunning", Storage="_ClassRunnings", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<ClassRunning> ClassRunnings
		{
			get
			{
				return this._ClassRunnings;
			}
			set
			{
				this._ClassRunnings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Prospect", Storage="_Prospects", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<Prospect> Prospects
		{
			get
			{
				return this._Prospects;
			}
			set
			{
				this._Prospects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Customer", Storage="_Customers", ThisKey="ID", OtherKey="HomeBranchID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserAtBranches(UserAtBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_UserAtBranches(UserAtBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_ActiveClassRoomInBranches(ActiveClassRoomInBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_ActiveClassRoomInBranches(ActiveClassRoomInBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_ActiveItemAtBranches(ActiveItemAtBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_ActiveItemAtBranches(ActiveItemAtBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_ActivePackageAtBranches(ActivePackageAtBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_ActivePackageAtBranches(ActivePackageAtBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_AutoNumbers(AutoNumber entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_AutoNumbers(AutoNumber entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_BillingHeaders(BillingHeader entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_BillingHeaders(BillingHeader entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_ChangeStatusDocuments(ChangeStatusDocument entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_ChangeStatusDocuments(ChangeStatusDocument entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_CheckInLogs(CheckInLog entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_CheckInLogs(CheckInLog entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_ClassScheduleDetails(ClassScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_ClassScheduleDetails(ClassScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_ClassTimeSlots(ClassTimeSlot entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_ClassTimeSlots(ClassTimeSlot entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_SalesTargets(SalesTarget entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_SalesTargets(SalesTarget entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_ClassRunnings(ClassRunning entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_ClassRunnings(ClassRunning entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_Prospects(Prospect entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Prospects(Prospect entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeStatusDocument")]
	public partial class ChangeStatusDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BranchID;
		
		private string _DocumentNo;
		
		private System.DateTime _Date;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private int _CustomerID;
		
		private int _EmployeeID;
		
		private int _DocumentTypeID;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private System.Nullable<int> _ApprovedByEmployeeID;
		
		private System.Nullable<System.DateTime> _VoidDate;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<CustomerStatusHistory> _CustomerStatusHistories;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnDocumentNoChanging(string value);
    partial void OnDocumentNoChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnDocumentTypeIDChanging(int value);
    partial void OnDocumentTypeIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnApprovedByEmployeeIDChanging(System.Nullable<int> value);
    partial void OnApprovedByEmployeeIDChanged();
    partial void OnVoidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVoidDateChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public ChangeStatusDocument()
		{
			this._CustomerStatusHistories = new EntitySet<CustomerStatusHistory>(new Action<CustomerStatusHistory>(this.attach_CustomerStatusHistories), new Action<CustomerStatusHistory>(this.detach_CustomerStatusHistories));
			this._Branch = default(EntityRef<Branch>);
			this._DocumentType = default(EntityRef<DocumentType>);
			this._Employee = default(EntityRef<Employee>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DocumentNo
		{
			get
			{
				return this._DocumentNo;
			}
			set
			{
				if ((this._DocumentNo != value))
				{
					this.OnDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._DocumentNo = value;
					this.SendPropertyChanged("DocumentNo");
					this.OnDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeID", DbType="Int NOT NULL")]
		public int DocumentTypeID
		{
			get
			{
				return this._DocumentTypeID;
			}
			set
			{
				if ((this._DocumentTypeID != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeID = value;
					this.SendPropertyChanged("DocumentTypeID");
					this.OnDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(5000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedByEmployeeID", DbType="Int")]
		public System.Nullable<int> ApprovedByEmployeeID
		{
			get
			{
				return this._ApprovedByEmployeeID;
			}
			set
			{
				if ((this._ApprovedByEmployeeID != value))
				{
					this.OnApprovedByEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._ApprovedByEmployeeID = value;
					this.SendPropertyChanged("ApprovedByEmployeeID");
					this.OnApprovedByEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VoidDate
		{
			get
			{
				return this._VoidDate;
			}
			set
			{
				if ((this._VoidDate != value))
				{
					this.OnVoidDateChanging(value);
					this.SendPropertyChanging();
					this._VoidDate = value;
					this.SendPropertyChanged("VoidDate");
					this.OnVoidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChangeStatusDocument_CustomerStatusHistory", Storage="_CustomerStatusHistories", ThisKey="ID", OtherKey="DocumentID")]
		public EntitySet<CustomerStatusHistory> CustomerStatusHistories
		{
			get
			{
				return this._CustomerStatusHistories;
			}
			set
			{
				this._CustomerStatusHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ChangeStatusDocument", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.ChangeStatusDocuments.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.ChangeStatusDocuments.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_ChangeStatusDocument", Storage="_DocumentType", ThisKey="DocumentTypeID", OtherKey="ID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.ChangeStatusDocuments.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.ChangeStatusDocuments.Add(this);
						this._DocumentTypeID = value.ID;
					}
					else
					{
						this._DocumentTypeID = default(int);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ChangeStatusDocument", Storage="_Employee", ThisKey="EmployeeID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.ChangeStatusDocuments.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.ChangeStatusDocuments.Add(this);
						this._EmployeeID = value.ID;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ChangeStatusDocument", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ChangeStatusDocuments.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ChangeStatusDocuments.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerStatusHistories(CustomerStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.ChangeStatusDocument = this;
		}
		
		private void detach_CustomerStatusHistories(CustomerStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.ChangeStatusDocument = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckInLog")]
	public partial class CheckInLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BranchID;
		
		private int _CustomerID;
		
		private System.DateTime _CheckInWhen;
		
		private int _EmployeeID;
		
		private int _CustomerStatusID;
		
		private bool _Allowed;
		
		private string _Messages;
		
		private string _InOut;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<CustomerStatus> _CustomerStatus;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnCheckInWhenChanging(System.DateTime value);
    partial void OnCheckInWhenChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnCustomerStatusIDChanging(int value);
    partial void OnCustomerStatusIDChanged();
    partial void OnAllowedChanging(bool value);
    partial void OnAllowedChanged();
    partial void OnMessagesChanging(string value);
    partial void OnMessagesChanged();
    partial void OnInOutChanging(string value);
    partial void OnInOutChanged();
    #endregion
		
		public CheckInLog()
		{
			this._Branch = default(EntityRef<Branch>);
			this._CustomerStatus = default(EntityRef<CustomerStatus>);
			this._Employee = default(EntityRef<Employee>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInWhen", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CheckInWhen
		{
			get
			{
				return this._CheckInWhen;
			}
			set
			{
				if ((this._CheckInWhen != value))
				{
					this.OnCheckInWhenChanging(value);
					this.SendPropertyChanging();
					this._CheckInWhen = value;
					this.SendPropertyChanged("CheckInWhen");
					this.OnCheckInWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerStatusID", DbType="Int NOT NULL")]
		public int CustomerStatusID
		{
			get
			{
				return this._CustomerStatusID;
			}
			set
			{
				if ((this._CustomerStatusID != value))
				{
					if (this._CustomerStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerStatusIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerStatusID = value;
					this.SendPropertyChanged("CustomerStatusID");
					this.OnCustomerStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Allowed", DbType="Bit NOT NULL")]
		public bool Allowed
		{
			get
			{
				return this._Allowed;
			}
			set
			{
				if ((this._Allowed != value))
				{
					this.OnAllowedChanging(value);
					this.SendPropertyChanging();
					this._Allowed = value;
					this.SendPropertyChanged("Allowed");
					this.OnAllowedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Messages", DbType="VarChar(500)")]
		public string Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				if ((this._Messages != value))
				{
					this.OnMessagesChanging(value);
					this.SendPropertyChanging();
					this._Messages = value;
					this.SendPropertyChanged("Messages");
					this.OnMessagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InOut", DbType="VarChar(1)")]
		public string InOut
		{
			get
			{
				return this._InOut;
			}
			set
			{
				if ((this._InOut != value))
				{
					this.OnInOutChanging(value);
					this.SendPropertyChanging();
					this._InOut = value;
					this.SendPropertyChanged("InOut");
					this.OnInOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_CheckInLog", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.CheckInLogs.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.CheckInLogs.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerStatus_CheckInLog", Storage="_CustomerStatus", ThisKey="CustomerStatusID", OtherKey="ID", IsForeignKey=true)]
		public CustomerStatus CustomerStatus
		{
			get
			{
				return this._CustomerStatus.Entity;
			}
			set
			{
				CustomerStatus previousValue = this._CustomerStatus.Entity;
				if (((previousValue != value) 
							|| (this._CustomerStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerStatus.Entity = null;
						previousValue.CheckInLogs.Remove(this);
					}
					this._CustomerStatus.Entity = value;
					if ((value != null))
					{
						value.CheckInLogs.Add(this);
						this._CustomerStatusID = value.ID;
					}
					else
					{
						this._CustomerStatusID = default(int);
					}
					this.SendPropertyChanged("CustomerStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CheckInLog", Storage="_Employee", ThisKey="EmployeeID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.CheckInLogs.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.CheckInLogs.Add(this);
						this._EmployeeID = value.ID;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CheckInLog", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CheckInLogs.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CheckInLogs.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private bool _IsActive;
		
		private bool _IsPaid;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<ActiveClassInPackage> _ActiveClassInPackages;
		
		private EntitySet<ClassPackage> _ClassPackages;
		
		private EntitySet<ClassScheduleDetail> _ClassScheduleDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsPaidChanging(bool value);
    partial void OnIsPaidChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Class()
		{
			this._ActiveClassInPackages = new EntitySet<ActiveClassInPackage>(new Action<ActiveClassInPackage>(this.attach_ActiveClassInPackages), new Action<ActiveClassInPackage>(this.detach_ActiveClassInPackages));
			this._ClassPackages = new EntitySet<ClassPackage>(new Action<ClassPackage>(this.attach_ClassPackages), new Action<ClassPackage>(this.detach_ClassPackages));
			this._ClassScheduleDetails = new EntitySet<ClassScheduleDetail>(new Action<ClassScheduleDetail>(this.attach_ClassScheduleDetails), new Action<ClassScheduleDetail>(this.detach_ClassScheduleDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit NOT NULL")]
		public bool IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ActiveClassInPackage", Storage="_ActiveClassInPackages", ThisKey="ID", OtherKey="ClassID")]
		public EntitySet<ActiveClassInPackage> ActiveClassInPackages
		{
			get
			{
				return this._ActiveClassInPackages;
			}
			set
			{
				this._ActiveClassInPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ClassPackage", Storage="_ClassPackages", ThisKey="ID", OtherKey="ClassID")]
		public EntitySet<ClassPackage> ClassPackages
		{
			get
			{
				return this._ClassPackages;
			}
			set
			{
				this._ClassPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ClassScheduleDetail", Storage="_ClassScheduleDetails", ThisKey="ID", OtherKey="ClassID")]
		public EntitySet<ClassScheduleDetail> ClassScheduleDetails
		{
			get
			{
				return this._ClassScheduleDetails;
			}
			set
			{
				this._ClassScheduleDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActiveClassInPackages(ActiveClassInPackage entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_ActiveClassInPackages(ActiveClassInPackage entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_ClassPackages(ClassPackage entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_ClassPackages(ClassPackage entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_ClassScheduleDetails(ClassScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_ClassScheduleDetails(ClassScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassAttendance")]
	public partial class ClassAttendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ClassRunningID;
		
		private int _CustomerID;
		
		private bool _IsAttend;
		
		private EntityRef<ClassRunning> _ClassRunning;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnClassRunningIDChanging(int value);
    partial void OnClassRunningIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnIsAttendChanging(bool value);
    partial void OnIsAttendChanged();
    #endregion
		
		public ClassAttendance()
		{
			this._ClassRunning = default(EntityRef<ClassRunning>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRunningID", DbType="Int NOT NULL")]
		public int ClassRunningID
		{
			get
			{
				return this._ClassRunningID;
			}
			set
			{
				if ((this._ClassRunningID != value))
				{
					if (this._ClassRunning.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassRunningIDChanging(value);
					this.SendPropertyChanging();
					this._ClassRunningID = value;
					this.SendPropertyChanged("ClassRunningID");
					this.OnClassRunningIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAttend", DbType="Bit NOT NULL")]
		public bool IsAttend
		{
			get
			{
				return this._IsAttend;
			}
			set
			{
				if ((this._IsAttend != value))
				{
					this.OnIsAttendChanging(value);
					this.SendPropertyChanging();
					this._IsAttend = value;
					this.SendPropertyChanged("IsAttend");
					this.OnIsAttendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassRunning_ClassAttendance", Storage="_ClassRunning", ThisKey="ClassRunningID", OtherKey="ID", IsForeignKey=true)]
		public ClassRunning ClassRunning
		{
			get
			{
				return this._ClassRunning.Entity;
			}
			set
			{
				ClassRunning previousValue = this._ClassRunning.Entity;
				if (((previousValue != value) 
							|| (this._ClassRunning.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassRunning.Entity = null;
						previousValue.ClassAttendances.Remove(this);
					}
					this._ClassRunning.Entity = value;
					if ((value != null))
					{
						value.ClassAttendances.Add(this);
						this._ClassRunningID = value.ID;
					}
					else
					{
						this._ClassRunningID = default(int);
					}
					this.SendPropertyChanged("ClassRunning");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ClassAttendance", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ClassAttendances.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ClassAttendances.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassPackage")]
	public partial class ClassPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageID;
		
		private int _ClassID;
		
		private bool _Mon;
		
		private bool _Tue;
		
		private bool _Wed;
		
		private bool _Thu;
		
		private bool _Fri;
		
		private bool _Sat;
		
		private bool _Sun;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<PackageHeader> _PackageHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnMonChanging(bool value);
    partial void OnMonChanged();
    partial void OnTueChanging(bool value);
    partial void OnTueChanged();
    partial void OnWedChanging(bool value);
    partial void OnWedChanged();
    partial void OnThuChanging(bool value);
    partial void OnThuChanged();
    partial void OnFriChanging(bool value);
    partial void OnFriChanged();
    partial void OnSatChanging(bool value);
    partial void OnSatChanged();
    partial void OnSunChanging(bool value);
    partial void OnSunChanged();
    #endregion
		
		public ClassPackage()
		{
			this._Class = default(EntityRef<Class>);
			this._PackageHeader = default(EntityRef<PackageHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._PackageHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mon", DbType="Bit NOT NULL")]
		public bool Mon
		{
			get
			{
				return this._Mon;
			}
			set
			{
				if ((this._Mon != value))
				{
					this.OnMonChanging(value);
					this.SendPropertyChanging();
					this._Mon = value;
					this.SendPropertyChanged("Mon");
					this.OnMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tue", DbType="Bit NOT NULL")]
		public bool Tue
		{
			get
			{
				return this._Tue;
			}
			set
			{
				if ((this._Tue != value))
				{
					this.OnTueChanging(value);
					this.SendPropertyChanging();
					this._Tue = value;
					this.SendPropertyChanged("Tue");
					this.OnTueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wed", DbType="Bit NOT NULL")]
		public bool Wed
		{
			get
			{
				return this._Wed;
			}
			set
			{
				if ((this._Wed != value))
				{
					this.OnWedChanging(value);
					this.SendPropertyChanging();
					this._Wed = value;
					this.SendPropertyChanged("Wed");
					this.OnWedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thu", DbType="Bit NOT NULL")]
		public bool Thu
		{
			get
			{
				return this._Thu;
			}
			set
			{
				if ((this._Thu != value))
				{
					this.OnThuChanging(value);
					this.SendPropertyChanging();
					this._Thu = value;
					this.SendPropertyChanged("Thu");
					this.OnThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fri", DbType="Bit NOT NULL")]
		public bool Fri
		{
			get
			{
				return this._Fri;
			}
			set
			{
				if ((this._Fri != value))
				{
					this.OnFriChanging(value);
					this.SendPropertyChanging();
					this._Fri = value;
					this.SendPropertyChanged("Fri");
					this.OnFriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sat", DbType="Bit NOT NULL")]
		public bool Sat
		{
			get
			{
				return this._Sat;
			}
			set
			{
				if ((this._Sat != value))
				{
					this.OnSatChanging(value);
					this.SendPropertyChanging();
					this._Sat = value;
					this.SendPropertyChanged("Sat");
					this.OnSatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sun", DbType="Bit NOT NULL")]
		public bool Sun
		{
			get
			{
				return this._Sun;
			}
			set
			{
				if ((this._Sun != value))
				{
					this.OnSunChanging(value);
					this.SendPropertyChanging();
					this._Sun = value;
					this.SendPropertyChanged("Sun");
					this.OnSunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ClassPackage", Storage="_Class", ThisKey="ClassID", OtherKey="ID", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.ClassPackages.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.ClassPackages.Add(this);
						this._ClassID = value.ID;
					}
					else
					{
						this._ClassID = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageHeader_ClassPackage", Storage="_PackageHeader", ThisKey="PackageID", OtherKey="ID", IsForeignKey=true)]
		public PackageHeader PackageHeader
		{
			get
			{
				return this._PackageHeader.Entity;
			}
			set
			{
				PackageHeader previousValue = this._PackageHeader.Entity;
				if (((previousValue != value) 
							|| (this._PackageHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageHeader.Entity = null;
						previousValue.ClassPackages.Remove(this);
					}
					this._PackageHeader.Entity = value;
					if ((value != null))
					{
						value.ClassPackages.Add(this);
						this._PackageID = value.ID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("PackageHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassRoom")]
	public partial class ClassRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<ActiveClassRoomInBranch> _ActiveClassRoomInBranches;
		
		private EntitySet<ClassScheduleDetail> _ClassScheduleDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public ClassRoom()
		{
			this._ActiveClassRoomInBranches = new EntitySet<ActiveClassRoomInBranch>(new Action<ActiveClassRoomInBranch>(this.attach_ActiveClassRoomInBranches), new Action<ActiveClassRoomInBranch>(this.detach_ActiveClassRoomInBranches));
			this._ClassScheduleDetails = new EntitySet<ClassScheduleDetail>(new Action<ClassScheduleDetail>(this.attach_ClassScheduleDetails), new Action<ClassScheduleDetail>(this.detach_ClassScheduleDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassRoom_ActiveClassRoomInBranch", Storage="_ActiveClassRoomInBranches", ThisKey="ID", OtherKey="ClassRoomID")]
		public EntitySet<ActiveClassRoomInBranch> ActiveClassRoomInBranches
		{
			get
			{
				return this._ActiveClassRoomInBranches;
			}
			set
			{
				this._ActiveClassRoomInBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassRoom_ClassScheduleDetail", Storage="_ClassScheduleDetails", ThisKey="ID", OtherKey="ClassRoomID")]
		public EntitySet<ClassScheduleDetail> ClassScheduleDetails
		{
			get
			{
				return this._ClassScheduleDetails;
			}
			set
			{
				this._ClassScheduleDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActiveClassRoomInBranches(ActiveClassRoomInBranch entity)
		{
			this.SendPropertyChanging();
			entity.ClassRoom = this;
		}
		
		private void detach_ActiveClassRoomInBranches(ActiveClassRoomInBranch entity)
		{
			this.SendPropertyChanging();
			entity.ClassRoom = null;
		}
		
		private void attach_ClassScheduleDetails(ClassScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClassRoom = this;
		}
		
		private void detach_ClassScheduleDetails(ClassScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClassRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassScheduleDetail")]
	public partial class ClassScheduleDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BranchID;
		
		private int _Year;
		
		private int _Month;
		
		private int _DayOfWeek;
		
		private int _ClassID;
		
		private int _InstructorID;
		
		private int _ClassRoomID;
		
		private string _TimeStart;
		
		private string _TimeEnd;
		
		private string _Level;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<ClassRunning> _ClassRunnings;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<ClassRoom> _ClassRoom;
		
		private EntityRef<Instructor> _Instructor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnDayOfWeekChanging(int value);
    partial void OnDayOfWeekChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnInstructorIDChanging(int value);
    partial void OnInstructorIDChanged();
    partial void OnClassRoomIDChanging(int value);
    partial void OnClassRoomIDChanged();
    partial void OnTimeStartChanging(string value);
    partial void OnTimeStartChanged();
    partial void OnTimeEndChanging(string value);
    partial void OnTimeEndChanged();
    partial void OnLevelChanging(string value);
    partial void OnLevelChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public ClassScheduleDetail()
		{
			this._ClassRunnings = new EntitySet<ClassRunning>(new Action<ClassRunning>(this.attach_ClassRunnings), new Action<ClassRunning>(this.detach_ClassRunnings));
			this._Branch = default(EntityRef<Branch>);
			this._Class = default(EntityRef<Class>);
			this._ClassRoom = default(EntityRef<ClassRoom>);
			this._Instructor = default(EntityRef<Instructor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeek", DbType="Int NOT NULL")]
		public int DayOfWeek
		{
			get
			{
				return this._DayOfWeek;
			}
			set
			{
				if ((this._DayOfWeek != value))
				{
					this.OnDayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeek = value;
					this.SendPropertyChanged("DayOfWeek");
					this.OnDayOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstructorID", DbType="Int NOT NULL")]
		public int InstructorID
		{
			get
			{
				return this._InstructorID;
			}
			set
			{
				if ((this._InstructorID != value))
				{
					if (this._Instructor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstructorIDChanging(value);
					this.SendPropertyChanging();
					this._InstructorID = value;
					this.SendPropertyChanged("InstructorID");
					this.OnInstructorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassRoomID", DbType="Int NOT NULL")]
		public int ClassRoomID
		{
			get
			{
				return this._ClassRoomID;
			}
			set
			{
				if ((this._ClassRoomID != value))
				{
					if (this._ClassRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassRoomIDChanging(value);
					this.SendPropertyChanging();
					this._ClassRoomID = value;
					this.SendPropertyChanged("ClassRoomID");
					this.OnClassRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStart", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string TimeStart
		{
			get
			{
				return this._TimeStart;
			}
			set
			{
				if ((this._TimeStart != value))
				{
					this.OnTimeStartChanging(value);
					this.SendPropertyChanging();
					this._TimeStart = value;
					this.SendPropertyChanged("TimeStart");
					this.OnTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnd", DbType="VarChar(5)")]
		public string TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="VarChar(10)")]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassScheduleDetail_ClassRunning", Storage="_ClassRunnings", ThisKey="ID", OtherKey="ClassScheduleID")]
		public EntitySet<ClassRunning> ClassRunnings
		{
			get
			{
				return this._ClassRunnings;
			}
			set
			{
				this._ClassRunnings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ClassScheduleDetail", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.ClassScheduleDetails.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.ClassScheduleDetails.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_ClassScheduleDetail", Storage="_Class", ThisKey="ClassID", OtherKey="ID", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.ClassScheduleDetails.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.ClassScheduleDetails.Add(this);
						this._ClassID = value.ID;
					}
					else
					{
						this._ClassID = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassRoom_ClassScheduleDetail", Storage="_ClassRoom", ThisKey="ClassRoomID", OtherKey="ID", IsForeignKey=true)]
		public ClassRoom ClassRoom
		{
			get
			{
				return this._ClassRoom.Entity;
			}
			set
			{
				ClassRoom previousValue = this._ClassRoom.Entity;
				if (((previousValue != value) 
							|| (this._ClassRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassRoom.Entity = null;
						previousValue.ClassScheduleDetails.Remove(this);
					}
					this._ClassRoom.Entity = value;
					if ((value != null))
					{
						value.ClassScheduleDetails.Add(this);
						this._ClassRoomID = value.ID;
					}
					else
					{
						this._ClassRoomID = default(int);
					}
					this.SendPropertyChanged("ClassRoom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instructor_ClassScheduleDetail", Storage="_Instructor", ThisKey="InstructorID", OtherKey="ID", IsForeignKey=true)]
		public Instructor Instructor
		{
			get
			{
				return this._Instructor.Entity;
			}
			set
			{
				Instructor previousValue = this._Instructor.Entity;
				if (((previousValue != value) 
							|| (this._Instructor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Instructor.Entity = null;
						previousValue.ClassScheduleDetails.Remove(this);
					}
					this._Instructor.Entity = value;
					if ((value != null))
					{
						value.ClassScheduleDetails.Add(this);
						this._InstructorID = value.ID;
					}
					else
					{
						this._InstructorID = default(int);
					}
					this.SendPropertyChanged("Instructor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassRunnings(ClassRunning entity)
		{
			this.SendPropertyChanging();
			entity.ClassScheduleDetail = this;
		}
		
		private void detach_ClassRunnings(ClassRunning entity)
		{
			this.SendPropertyChanging();
			entity.ClassScheduleDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassTimeSlot")]
	public partial class ClassTimeSlot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BranchID;
		
		private int _DayOfWeek;
		
		private string _StartTime;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnDayOfWeekChanging(int value);
    partial void OnDayOfWeekChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    #endregion
		
		public ClassTimeSlot()
		{
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeek", DbType="Int NOT NULL")]
		public int DayOfWeek
		{
			get
			{
				return this._DayOfWeek;
			}
			set
			{
				if ((this._DayOfWeek != value))
				{
					this.OnDayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._DayOfWeek = value;
					this.SendPropertyChanged("DayOfWeek");
					this.OnDayOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(5)")]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ClassTimeSlot", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.ClassTimeSlots.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.ClassTimeSlots.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Configuration")]
	public partial class Configuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Key;
		
		private string _Value;
		
		private bool _IsInteger;
		
		private string _Description;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnIsIntegerChanging(bool value);
    partial void OnIsIntegerChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Configuration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInteger", DbType="Bit NOT NULL")]
		public bool IsInteger
		{
			get
			{
				return this._IsInteger;
			}
			set
			{
				if ((this._IsInteger != value))
				{
					this.OnIsIntegerChanging(value);
					this.SendPropertyChanging();
					this._IsInteger = value;
					this.SendPropertyChanged("IsInteger");
					this.OnIsIntegerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CreditCardType")]
	public partial class CreditCardType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<PaymentDetail> _PaymentDetails;
		
		private EntitySet<CreditCardChangeHistory> _CreditCardChangeHistories;
		
		private EntitySet<PaymentAccrualDetail> _PaymentAccrualDetails;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public CreditCardType()
		{
			this._PaymentDetails = new EntitySet<PaymentDetail>(new Action<PaymentDetail>(this.attach_PaymentDetails), new Action<PaymentDetail>(this.detach_PaymentDetails));
			this._CreditCardChangeHistories = new EntitySet<CreditCardChangeHistory>(new Action<CreditCardChangeHistory>(this.attach_CreditCardChangeHistories), new Action<CreditCardChangeHistory>(this.detach_CreditCardChangeHistories));
			this._PaymentAccrualDetails = new EntitySet<PaymentAccrualDetail>(new Action<PaymentAccrualDetail>(this.attach_PaymentAccrualDetails), new Action<PaymentAccrualDetail>(this.detach_PaymentAccrualDetails));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCardType_PaymentDetail", Storage="_PaymentDetails", ThisKey="ID", OtherKey="CreditCardTypeID")]
		public EntitySet<PaymentDetail> PaymentDetails
		{
			get
			{
				return this._PaymentDetails;
			}
			set
			{
				this._PaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCardType_CreditCardChangeHistory", Storage="_CreditCardChangeHistories", ThisKey="ID", OtherKey="CreditCardTypeID")]
		public EntitySet<CreditCardChangeHistory> CreditCardChangeHistories
		{
			get
			{
				return this._CreditCardChangeHistories;
			}
			set
			{
				this._CreditCardChangeHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCardType_PaymentAccrualDetail", Storage="_PaymentAccrualDetails", ThisKey="ID", OtherKey="CreditCardTypeID")]
		public EntitySet<PaymentAccrualDetail> PaymentAccrualDetails
		{
			get
			{
				return this._PaymentAccrualDetails;
			}
			set
			{
				this._PaymentAccrualDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCardType_Customer", Storage="_Customers", ThisKey="ID", OtherKey="CreditCardTypeID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentDetails(PaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.CreditCardType = this;
		}
		
		private void detach_PaymentDetails(PaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.CreditCardType = null;
		}
		
		private void attach_CreditCardChangeHistories(CreditCardChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.CreditCardType = this;
		}
		
		private void detach_CreditCardChangeHistories(CreditCardChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.CreditCardType = null;
		}
		
		private void attach_PaymentAccrualDetails(PaymentAccrualDetail entity)
		{
			this.SendPropertyChanging();
			entity.CreditCardType = this;
		}
		
		private void detach_PaymentAccrualDetails(PaymentAccrualDetail entity)
		{
			this.SendPropertyChanging();
			entity.CreditCardType = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CreditCardType = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CreditCardType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerNotes")]
	public partial class CustomerNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CustomerID;
		
		private string _Notes;
		
		private short _Priority;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnPriorityChanging(short value);
    partial void OnPriorityChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public CustomerNote()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="SmallInt NOT NULL")]
		public short Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerNote", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerNotes.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerNotes.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerStatus")]
	public partial class CustomerStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private string _Color;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<CheckInLog> _CheckInLogs;
		
		private EntitySet<CustomerStatusHistory> _CustomerStatusHistories;
		
		private EntitySet<DocumentType> _DocumentTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public CustomerStatus()
		{
			this._CheckInLogs = new EntitySet<CheckInLog>(new Action<CheckInLog>(this.attach_CheckInLogs), new Action<CheckInLog>(this.detach_CheckInLogs));
			this._CustomerStatusHistories = new EntitySet<CustomerStatusHistory>(new Action<CustomerStatusHistory>(this.attach_CustomerStatusHistories), new Action<CustomerStatusHistory>(this.detach_CustomerStatusHistories));
			this._DocumentTypes = new EntitySet<DocumentType>(new Action<DocumentType>(this.attach_DocumentTypes), new Action<DocumentType>(this.detach_DocumentTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(20)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerStatus_CheckInLog", Storage="_CheckInLogs", ThisKey="ID", OtherKey="CustomerStatusID")]
		public EntitySet<CheckInLog> CheckInLogs
		{
			get
			{
				return this._CheckInLogs;
			}
			set
			{
				this._CheckInLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerStatus_CustomerStatusHistory", Storage="_CustomerStatusHistories", ThisKey="ID", OtherKey="CustomerStatusID")]
		public EntitySet<CustomerStatusHistory> CustomerStatusHistories
		{
			get
			{
				return this._CustomerStatusHistories;
			}
			set
			{
				this._CustomerStatusHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerStatus_DocumentType", Storage="_DocumentTypes", ThisKey="ID", OtherKey="ChangeCustomerStatusIDTo")]
		public EntitySet<DocumentType> DocumentTypes
		{
			get
			{
				return this._DocumentTypes;
			}
			set
			{
				this._DocumentTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CheckInLogs(CheckInLog entity)
		{
			this.SendPropertyChanging();
			entity.CustomerStatus = this;
		}
		
		private void detach_CheckInLogs(CheckInLog entity)
		{
			this.SendPropertyChanging();
			entity.CustomerStatus = null;
		}
		
		private void attach_CustomerStatusHistories(CustomerStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.CustomerStatus = this;
		}
		
		private void detach_CustomerStatusHistories(CustomerStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.CustomerStatus = null;
		}
		
		private void attach_DocumentTypes(DocumentType entity)
		{
			this.SendPropertyChanging();
			entity.CustomerStatus = this;
		}
		
		private void detach_DocumentTypes(DocumentType entity)
		{
			this.SendPropertyChanging();
			entity.CustomerStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerStatusHistory")]
	public partial class CustomerStatusHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CustomerID;
		
		private int _CustomerStatusID;
		
		private System.DateTime _Date;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Notes;
		
		private System.Nullable<int> _DocumentID;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntityRef<ChangeStatusDocument> _ChangeStatusDocument;
		
		private EntityRef<CustomerStatus> _CustomerStatus;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerStatusIDChanging(int value);
    partial void OnCustomerStatusIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDocumentIDChanging(System.Nullable<int> value);
    partial void OnDocumentIDChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public CustomerStatusHistory()
		{
			this._ChangeStatusDocument = default(EntityRef<ChangeStatusDocument>);
			this._CustomerStatus = default(EntityRef<CustomerStatus>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerStatusID", DbType="Int NOT NULL")]
		public int CustomerStatusID
		{
			get
			{
				return this._CustomerStatusID;
			}
			set
			{
				if ((this._CustomerStatusID != value))
				{
					if (this._CustomerStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerStatusIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerStatusID = value;
					this.SendPropertyChanged("CustomerStatusID");
					this.OnCustomerStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(2000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="Int")]
		public System.Nullable<int> DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._ChangeStatusDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChangeStatusDocument_CustomerStatusHistory", Storage="_ChangeStatusDocument", ThisKey="DocumentID", OtherKey="ID", IsForeignKey=true)]
		public ChangeStatusDocument ChangeStatusDocument
		{
			get
			{
				return this._ChangeStatusDocument.Entity;
			}
			set
			{
				ChangeStatusDocument previousValue = this._ChangeStatusDocument.Entity;
				if (((previousValue != value) 
							|| (this._ChangeStatusDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChangeStatusDocument.Entity = null;
						previousValue.CustomerStatusHistories.Remove(this);
					}
					this._ChangeStatusDocument.Entity = value;
					if ((value != null))
					{
						value.CustomerStatusHistories.Add(this);
						this._DocumentID = value.ID;
					}
					else
					{
						this._DocumentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChangeStatusDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerStatus_CustomerStatusHistory", Storage="_CustomerStatus", ThisKey="CustomerStatusID", OtherKey="ID", IsForeignKey=true)]
		public CustomerStatus CustomerStatus
		{
			get
			{
				return this._CustomerStatus.Entity;
			}
			set
			{
				CustomerStatus previousValue = this._CustomerStatus.Entity;
				if (((previousValue != value) 
							|| (this._CustomerStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerStatus.Entity = null;
						previousValue.CustomerStatusHistories.Remove(this);
					}
					this._CustomerStatus.Entity = value;
					if ((value != null))
					{
						value.CustomerStatusHistories.Add(this);
						this._CustomerStatusID = value.ID;
					}
					else
					{
						this._CustomerStatusID = default(int);
					}
					this.SendPropertyChanged("CustomerStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerStatusHistory", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerStatusHistories.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerStatusHistories.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.debug")]
	public partial class debug
	{
		
		private string _txt;
		
		public debug()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_txt", DbType="VarChar(MAX)")]
		public string txt
		{
			get
			{
				return this._txt;
			}
			set
			{
				if ((this._txt != value))
				{
					this._txt = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentType")]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private bool _IsLastState;
		
		private System.Nullable<int> _ChangeCustomerStatusIDTo;
		
		private EntitySet<ChangeStatusDocument> _ChangeStatusDocuments;
		
		private EntityRef<CustomerStatus> _CustomerStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsLastStateChanging(bool value);
    partial void OnIsLastStateChanged();
    partial void OnChangeCustomerStatusIDToChanging(System.Nullable<int> value);
    partial void OnChangeCustomerStatusIDToChanged();
    #endregion
		
		public DocumentType()
		{
			this._ChangeStatusDocuments = new EntitySet<ChangeStatusDocument>(new Action<ChangeStatusDocument>(this.attach_ChangeStatusDocuments), new Action<ChangeStatusDocument>(this.detach_ChangeStatusDocuments));
			this._CustomerStatus = default(EntityRef<CustomerStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLastState", DbType="Bit NOT NULL")]
		public bool IsLastState
		{
			get
			{
				return this._IsLastState;
			}
			set
			{
				if ((this._IsLastState != value))
				{
					this.OnIsLastStateChanging(value);
					this.SendPropertyChanging();
					this._IsLastState = value;
					this.SendPropertyChanged("IsLastState");
					this.OnIsLastStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeCustomerStatusIDTo", DbType="Int")]
		public System.Nullable<int> ChangeCustomerStatusIDTo
		{
			get
			{
				return this._ChangeCustomerStatusIDTo;
			}
			set
			{
				if ((this._ChangeCustomerStatusIDTo != value))
				{
					if (this._CustomerStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChangeCustomerStatusIDToChanging(value);
					this.SendPropertyChanging();
					this._ChangeCustomerStatusIDTo = value;
					this.SendPropertyChanged("ChangeCustomerStatusIDTo");
					this.OnChangeCustomerStatusIDToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_ChangeStatusDocument", Storage="_ChangeStatusDocuments", ThisKey="ID", OtherKey="DocumentTypeID")]
		public EntitySet<ChangeStatusDocument> ChangeStatusDocuments
		{
			get
			{
				return this._ChangeStatusDocuments;
			}
			set
			{
				this._ChangeStatusDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerStatus_DocumentType", Storage="_CustomerStatus", ThisKey="ChangeCustomerStatusIDTo", OtherKey="ID", IsForeignKey=true)]
		public CustomerStatus CustomerStatus
		{
			get
			{
				return this._CustomerStatus.Entity;
			}
			set
			{
				CustomerStatus previousValue = this._CustomerStatus.Entity;
				if (((previousValue != value) 
							|| (this._CustomerStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerStatus.Entity = null;
						previousValue.DocumentTypes.Remove(this);
					}
					this._CustomerStatus.Entity = value;
					if ((value != null))
					{
						value.DocumentTypes.Add(this);
						this._ChangeCustomerStatusIDTo = value.ID;
					}
					else
					{
						this._ChangeCustomerStatusIDTo = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChangeStatusDocuments(ChangeStatusDocument entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_ChangeStatusDocuments(ChangeStatusDocument entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormAccess")]
	public partial class FormAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private string _FormUrl;
		
		private bool _CanAddNew;
		
		private bool _CanUpdate;
		
		private bool _CanDelete;
		
		private bool _CanRead;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnFormUrlChanging(string value);
    partial void OnFormUrlChanged();
    partial void OnCanAddNewChanging(bool value);
    partial void OnCanAddNewChanged();
    partial void OnCanUpdateChanging(bool value);
    partial void OnCanUpdateChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanReadChanging(bool value);
    partial void OnCanReadChanged();
    #endregion
		
		public FormAccess()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormUrl", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FormUrl
		{
			get
			{
				return this._FormUrl;
			}
			set
			{
				if ((this._FormUrl != value))
				{
					this.OnFormUrlChanging(value);
					this.SendPropertyChanging();
					this._FormUrl = value;
					this.SendPropertyChanged("FormUrl");
					this.OnFormUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAddNew", DbType="Bit NOT NULL")]
		public bool CanAddNew
		{
			get
			{
				return this._CanAddNew;
			}
			set
			{
				if ((this._CanAddNew != value))
				{
					this.OnCanAddNewChanging(value);
					this.SendPropertyChanging();
					this._CanAddNew = value;
					this.SendPropertyChanged("CanAddNew");
					this.OnCanAddNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanUpdate", DbType="Bit NOT NULL")]
		public bool CanUpdate
		{
			get
			{
				return this._CanUpdate;
			}
			set
			{
				if ((this._CanUpdate != value))
				{
					this.OnCanUpdateChanging(value);
					this.SendPropertyChanging();
					this._CanUpdate = value;
					this.SendPropertyChanged("CanUpdate");
					this.OnCanUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanRead", DbType="Bit NOT NULL")]
		public bool CanRead
		{
			get
			{
				return this._CanRead;
			}
			set
			{
				if ((this._CanRead != value))
				{
					this.OnCanReadChanging(value);
					this.SendPropertyChanging();
					this._CanRead = value;
					this.SendPropertyChanged("CanRead");
					this.OnCanReadChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Instructor")]
	public partial class Instructor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Barcode;
		
		private string _Name;
		
		private System.DateTime _HireDate;
		
		private string _Status;
		
		private string _Email;
		
		private string _HomePhone;
		
		private string _CellPhone;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<ClassScheduleDetail> _ClassScheduleDetails;
		
		private EntitySet<InstructorAttendance> _InstructorAttendances;
		
		private EntitySet<ClassRunning> _ClassRunnings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHireDateChanging(System.DateTime value);
    partial void OnHireDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Instructor()
		{
			this._ClassScheduleDetails = new EntitySet<ClassScheduleDetail>(new Action<ClassScheduleDetail>(this.attach_ClassScheduleDetails), new Action<ClassScheduleDetail>(this.detach_ClassScheduleDetails));
			this._InstructorAttendances = new EntitySet<InstructorAttendance>(new Action<InstructorAttendance>(this.attach_InstructorAttendances), new Action<InstructorAttendance>(this.detach_InstructorAttendances));
			this._ClassRunnings = new EntitySet<ClassRunning>(new Action<ClassRunning>(this.attach_ClassRunnings), new Action<ClassRunning>(this.detach_ClassRunnings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HireDate", DbType="DateTime NOT NULL")]
		public System.DateTime HireDate
		{
			get
			{
				return this._HireDate;
			}
			set
			{
				if ((this._HireDate != value))
				{
					this.OnHireDateChanging(value);
					this.SendPropertyChanging();
					this._HireDate = value;
					this.SendPropertyChanged("HireDate");
					this.OnHireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(200)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="VarChar(20)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="VarChar(20)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instructor_ClassScheduleDetail", Storage="_ClassScheduleDetails", ThisKey="ID", OtherKey="InstructorID")]
		public EntitySet<ClassScheduleDetail> ClassScheduleDetails
		{
			get
			{
				return this._ClassScheduleDetails;
			}
			set
			{
				this._ClassScheduleDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instructor_InstructorAttendance", Storage="_InstructorAttendances", ThisKey="ID", OtherKey="InstructorID")]
		public EntitySet<InstructorAttendance> InstructorAttendances
		{
			get
			{
				return this._InstructorAttendances;
			}
			set
			{
				this._InstructorAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instructor_ClassRunning", Storage="_ClassRunnings", ThisKey="ID", OtherKey="RunningInstructorID")]
		public EntitySet<ClassRunning> ClassRunnings
		{
			get
			{
				return this._ClassRunnings;
			}
			set
			{
				this._ClassRunnings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassScheduleDetails(ClassScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.Instructor = this;
		}
		
		private void detach_ClassScheduleDetails(ClassScheduleDetail entity)
		{
			this.SendPropertyChanging();
			entity.Instructor = null;
		}
		
		private void attach_InstructorAttendances(InstructorAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Instructor = this;
		}
		
		private void detach_InstructorAttendances(InstructorAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Instructor = null;
		}
		
		private void attach_ClassRunnings(ClassRunning entity)
		{
			this.SendPropertyChanging();
			entity.Instructor = this;
		}
		
		private void detach_ClassRunnings(ClassRunning entity)
		{
			this.SendPropertyChanging();
			entity.Instructor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstructorAttendance")]
	public partial class InstructorAttendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BranchID;
		
		private int _InstructorID;
		
		private System.DateTime _Date;
		
		private System.DateTime _AttendanceIn;
		
		private System.Nullable<System.DateTime> _AttendanceOut;
		
		private EntityRef<Instructor> _Instructor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnInstructorIDChanging(int value);
    partial void OnInstructorIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnAttendanceInChanging(System.DateTime value);
    partial void OnAttendanceInChanged();
    partial void OnAttendanceOutChanging(System.Nullable<System.DateTime> value);
    partial void OnAttendanceOutChanged();
    #endregion
		
		public InstructorAttendance()
		{
			this._Instructor = default(EntityRef<Instructor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstructorID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InstructorID
		{
			get
			{
				return this._InstructorID;
			}
			set
			{
				if ((this._InstructorID != value))
				{
					if (this._Instructor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstructorIDChanging(value);
					this.SendPropertyChanging();
					this._InstructorID = value;
					this.SendPropertyChanged("InstructorID");
					this.OnInstructorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceIn", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime AttendanceIn
		{
			get
			{
				return this._AttendanceIn;
			}
			set
			{
				if ((this._AttendanceIn != value))
				{
					this.OnAttendanceInChanging(value);
					this.SendPropertyChanging();
					this._AttendanceIn = value;
					this.SendPropertyChanged("AttendanceIn");
					this.OnAttendanceInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttendanceOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> AttendanceOut
		{
			get
			{
				return this._AttendanceOut;
			}
			set
			{
				if ((this._AttendanceOut != value))
				{
					this.OnAttendanceOutChanging(value);
					this.SendPropertyChanging();
					this._AttendanceOut = value;
					this.SendPropertyChanged("AttendanceOut");
					this.OnAttendanceOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instructor_InstructorAttendance", Storage="_Instructor", ThisKey="InstructorID", OtherKey="ID", IsForeignKey=true)]
		public Instructor Instructor
		{
			get
			{
				return this._Instructor.Entity;
			}
			set
			{
				Instructor previousValue = this._Instructor.Entity;
				if (((previousValue != value) 
							|| (this._Instructor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Instructor.Entity = null;
						previousValue.InstructorAttendances.Remove(this);
					}
					this._Instructor.Entity = value;
					if ((value != null))
					{
						value.InstructorAttendances.Add(this);
						this._InstructorID = value.ID;
					}
					else
					{
						this._InstructorID = default(int);
					}
					this.SendPropertyChanged("Instructor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceDetail")]
	public partial class InvoiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InvoiceID;
		
		private int _ItemID;
		
		private int _Quantity;
		
		private decimal _UnitPrice;
		
		private decimal _Discount;
		
		private bool _IsTaxable;
		
		private EntityRef<InvoiceHeader> _InvoiceHeader;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnIsTaxableChanging(bool value);
    partial void OnIsTaxableChanged();
    #endregion
		
		public InvoiceDetail()
		{
			this._InvoiceHeader = default(EntityRef<InvoiceHeader>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL")]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(20,2) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(5,2) NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTaxable", DbType="Bit NOT NULL")]
		public bool IsTaxable
		{
			get
			{
				return this._IsTaxable;
			}
			set
			{
				if ((this._IsTaxable != value))
				{
					this.OnIsTaxableChanging(value);
					this.SendPropertyChanging();
					this._IsTaxable = value;
					this.SendPropertyChanged("IsTaxable");
					this.OnIsTaxableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceHeader_InvoiceDetail", Storage="_InvoiceHeader", ThisKey="InvoiceID", OtherKey="ID", IsForeignKey=true)]
		public InvoiceHeader InvoiceHeader
		{
			get
			{
				return this._InvoiceHeader.Entity;
			}
			set
			{
				InvoiceHeader previousValue = this._InvoiceHeader.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceHeader.Entity = null;
						previousValue.InvoiceDetails.Remove(this);
					}
					this._InvoiceHeader.Entity = value;
					if ((value != null))
					{
						value.InvoiceDetails.Add(this);
						this._InvoiceID = value.ID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_InvoiceDetail", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.InvoiceDetails.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.InvoiceDetails.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceHeader")]
	public partial class InvoiceHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BranchID;
		
		private string _InvoiceNo;
		
		private System.Nullable<int> _ContractID;
		
		private System.DateTime _Date;
		
		private decimal _DiscountValue;
		
		private System.Nullable<int> _CustomerID;
		
		private string _CustomerName;
		
		private int _EmployeeID;
		
		private string _InvoiceType;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _VoidDate;
		
		private string _VoidReason;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<BillingDetail> _BillingDetails;
		
		private EntitySet<InvoiceDetail> _InvoiceDetails;
		
		private EntitySet<PaymentHeader> _PaymentHeaders;
		
		private EntitySet<InvoiceAccrualHeader> _InvoiceAccrualHeaders;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnContractIDChanging(System.Nullable<int> value);
    partial void OnContractIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnDiscountValueChanging(decimal value);
    partial void OnDiscountValueChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnInvoiceTypeChanging(string value);
    partial void OnInvoiceTypeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnVoidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVoidDateChanged();
    partial void OnVoidReasonChanging(string value);
    partial void OnVoidReasonChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public InvoiceHeader()
		{
			this._BillingDetails = new EntitySet<BillingDetail>(new Action<BillingDetail>(this.attach_BillingDetails), new Action<BillingDetail>(this.detach_BillingDetails));
			this._InvoiceDetails = new EntitySet<InvoiceDetail>(new Action<InvoiceDetail>(this.attach_InvoiceDetails), new Action<InvoiceDetail>(this.detach_InvoiceDetails));
			this._PaymentHeaders = new EntitySet<PaymentHeader>(new Action<PaymentHeader>(this.attach_PaymentHeaders), new Action<PaymentHeader>(this.detach_PaymentHeaders));
			this._InvoiceAccrualHeaders = new EntitySet<InvoiceAccrualHeader>(new Action<InvoiceAccrualHeader>(this.attach_InvoiceAccrualHeaders), new Action<InvoiceAccrualHeader>(this.detach_InvoiceAccrualHeaders));
			this._Branch = default(EntityRef<Branch>);
			this._Employee = default(EntityRef<Employee>);
			this._Contract = default(EntityRef<Contract>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int")]
		public System.Nullable<int> ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountValue", DbType="Decimal(20,2) NOT NULL")]
		public decimal DiscountValue
		{
			get
			{
				return this._DiscountValue;
			}
			set
			{
				if ((this._DiscountValue != value))
				{
					this.OnDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._DiscountValue = value;
					this.SendPropertyChanged("DiscountValue");
					this.OnDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(100)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(2000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VoidDate
		{
			get
			{
				return this._VoidDate;
			}
			set
			{
				if ((this._VoidDate != value))
				{
					this.OnVoidDateChanging(value);
					this.SendPropertyChanging();
					this._VoidDate = value;
					this.SendPropertyChanged("VoidDate");
					this.OnVoidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidReason", DbType="VarChar(2000)")]
		public string VoidReason
		{
			get
			{
				return this._VoidReason;
			}
			set
			{
				if ((this._VoidReason != value))
				{
					this.OnVoidReasonChanging(value);
					this.SendPropertyChanging();
					this._VoidReason = value;
					this.SendPropertyChanged("VoidReason");
					this.OnVoidReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceHeader_BillingDetail", Storage="_BillingDetails", ThisKey="ID", OtherKey="InvoiceID")]
		public EntitySet<BillingDetail> BillingDetails
		{
			get
			{
				return this._BillingDetails;
			}
			set
			{
				this._BillingDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceHeader_InvoiceDetail", Storage="_InvoiceDetails", ThisKey="ID", OtherKey="InvoiceID")]
		public EntitySet<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this._InvoiceDetails;
			}
			set
			{
				this._InvoiceDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceHeader_PaymentHeader", Storage="_PaymentHeaders", ThisKey="ID", OtherKey="InvoiceID")]
		public EntitySet<PaymentHeader> PaymentHeaders
		{
			get
			{
				return this._PaymentHeaders;
			}
			set
			{
				this._PaymentHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceHeader_InvoiceAccrualHeader", Storage="_InvoiceAccrualHeaders", ThisKey="ID", OtherKey="InvoiceID")]
		public EntitySet<InvoiceAccrualHeader> InvoiceAccrualHeaders
		{
			get
			{
				return this._InvoiceAccrualHeaders;
			}
			set
			{
				this._InvoiceAccrualHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_InvoiceHeader", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.InvoiceHeaders.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.InvoiceHeaders.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_InvoiceHeader", Storage="_Employee", ThisKey="EmployeeID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.InvoiceHeaders.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.InvoiceHeaders.Add(this);
						this._EmployeeID = value.ID;
					}
					else
					{
						this._EmployeeID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_InvoiceHeader", Storage="_Contract", ThisKey="ContractID", OtherKey="ID", IsForeignKey=true)]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.InvoiceHeaders.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.InvoiceHeaders.Add(this);
						this._ContractID = value.ID;
					}
					else
					{
						this._ContractID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_InvoiceHeader", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.InvoiceHeaders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.InvoiceHeaders.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillingDetails(BillingDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceHeader = this;
		}
		
		private void detach_BillingDetails(BillingDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceHeader = null;
		}
		
		private void attach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceHeader = this;
		}
		
		private void detach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceHeader = null;
		}
		
		private void attach_PaymentHeaders(PaymentHeader entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceHeader = this;
		}
		
		private void detach_PaymentHeaders(PaymentHeader entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceHeader = null;
		}
		
		private void attach_InvoiceAccrualHeaders(InvoiceAccrualHeader entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceHeader = this;
		}
		
		private void detach_InvoiceAccrualHeaders(InvoiceAccrualHeader entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Barcode;
		
		private string _Description;
		
		private int _ItemAccountID;
		
		private int _ItemTypeID;
		
		private decimal _UnitPrice;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<ActiveItemAtBranch> _ActiveItemAtBranches;
		
		private EntitySet<InvoiceDetail> _InvoiceDetails;
		
		private EntitySet<PackageDetail> _PackageDetails;
		
		private EntitySet<InvoiceAccrualDetail> _InvoiceAccrualDetails;
		
		private EntitySet<Contract> _Contracts;
		
		private EntityRef<ItemAccount> _ItemAccount;
		
		private EntityRef<ItemType> _ItemType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnItemAccountIDChanging(int value);
    partial void OnItemAccountIDChanged();
    partial void OnItemTypeIDChanging(int value);
    partial void OnItemTypeIDChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Item()
		{
			this._ActiveItemAtBranches = new EntitySet<ActiveItemAtBranch>(new Action<ActiveItemAtBranch>(this.attach_ActiveItemAtBranches), new Action<ActiveItemAtBranch>(this.detach_ActiveItemAtBranches));
			this._InvoiceDetails = new EntitySet<InvoiceDetail>(new Action<InvoiceDetail>(this.attach_InvoiceDetails), new Action<InvoiceDetail>(this.detach_InvoiceDetails));
			this._PackageDetails = new EntitySet<PackageDetail>(new Action<PackageDetail>(this.attach_PackageDetails), new Action<PackageDetail>(this.detach_PackageDetails));
			this._InvoiceAccrualDetails = new EntitySet<InvoiceAccrualDetail>(new Action<InvoiceAccrualDetail>(this.attach_InvoiceAccrualDetails), new Action<InvoiceAccrualDetail>(this.detach_InvoiceAccrualDetails));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._ItemAccount = default(EntityRef<ItemAccount>);
			this._ItemType = default(EntityRef<ItemType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemAccountID", DbType="Int NOT NULL")]
		public int ItemAccountID
		{
			get
			{
				return this._ItemAccountID;
			}
			set
			{
				if ((this._ItemAccountID != value))
				{
					if (this._ItemAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ItemAccountID = value;
					this.SendPropertyChanged("ItemAccountID");
					this.OnItemAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTypeID", DbType="Int NOT NULL")]
		public int ItemTypeID
		{
			get
			{
				return this._ItemTypeID;
			}
			set
			{
				if ((this._ItemTypeID != value))
				{
					if (this._ItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ItemTypeID = value;
					this.SendPropertyChanged("ItemTypeID");
					this.OnItemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(20,2) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ActiveItemAtBranch", Storage="_ActiveItemAtBranches", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<ActiveItemAtBranch> ActiveItemAtBranches
		{
			get
			{
				return this._ActiveItemAtBranches;
			}
			set
			{
				this._ActiveItemAtBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_InvoiceDetail", Storage="_InvoiceDetails", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this._InvoiceDetails;
			}
			set
			{
				this._InvoiceDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_PackageDetail", Storage="_PackageDetails", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<PackageDetail> PackageDetails
		{
			get
			{
				return this._PackageDetails;
			}
			set
			{
				this._PackageDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_InvoiceAccrualDetail", Storage="_InvoiceAccrualDetails", ThisKey="ID", OtherKey="ItemID")]
		public EntitySet<InvoiceAccrualDetail> InvoiceAccrualDetails
		{
			get
			{
				return this._InvoiceAccrualDetails;
			}
			set
			{
				this._InvoiceAccrualDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="BillingItemID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemAccount_Item", Storage="_ItemAccount", ThisKey="ItemAccountID", OtherKey="ID", IsForeignKey=true)]
		public ItemAccount ItemAccount
		{
			get
			{
				return this._ItemAccount.Entity;
			}
			set
			{
				ItemAccount previousValue = this._ItemAccount.Entity;
				if (((previousValue != value) 
							|| (this._ItemAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemAccount.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._ItemAccount.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._ItemAccountID = value.ID;
					}
					else
					{
						this._ItemAccountID = default(int);
					}
					this.SendPropertyChanged("ItemAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemType_Item", Storage="_ItemType", ThisKey="ItemTypeID", OtherKey="ID", IsForeignKey=true)]
		public ItemType ItemType
		{
			get
			{
				return this._ItemType.Entity;
			}
			set
			{
				ItemType previousValue = this._ItemType.Entity;
				if (((previousValue != value) 
							|| (this._ItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemType.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._ItemType.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._ItemTypeID = value.ID;
					}
					else
					{
						this._ItemTypeID = default(int);
					}
					this.SendPropertyChanged("ItemType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActiveItemAtBranches(ActiveItemAtBranch entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_ActiveItemAtBranches(ActiveItemAtBranch entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_PackageDetails(PackageDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_PackageDetails(PackageDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_InvoiceAccrualDetails(InvoiceAccrualDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_InvoiceAccrualDetails(InvoiceAccrualDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemAccount")]
	public partial class ItemAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _AccountNo;
		
		private string _Description;
		
		private System.Nullable<int> _ParentID;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<Item> _Items;
		
		private EntitySet<ItemAccount> _ItemAccounts;
		
		private EntityRef<ItemAccount> _ItemAccount1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public ItemAccount()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			this._ItemAccounts = new EntitySet<ItemAccount>(new Action<ItemAccount>(this.attach_ItemAccounts), new Action<ItemAccount>(this.detach_ItemAccounts));
			this._ItemAccount1 = default(EntityRef<ItemAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._ItemAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemAccount_Item", Storage="_Items", ThisKey="ID", OtherKey="ItemAccountID")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemAccount_ItemAccount", Storage="_ItemAccounts", ThisKey="ID", OtherKey="ParentID")]
		public EntitySet<ItemAccount> ItemAccounts
		{
			get
			{
				return this._ItemAccounts;
			}
			set
			{
				this._ItemAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemAccount_ItemAccount", Storage="_ItemAccount1", ThisKey="ParentID", OtherKey="ID", IsForeignKey=true)]
		public ItemAccount ItemAccount1
		{
			get
			{
				return this._ItemAccount1.Entity;
			}
			set
			{
				ItemAccount previousValue = this._ItemAccount1.Entity;
				if (((previousValue != value) 
							|| (this._ItemAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemAccount1.Entity = null;
						previousValue.ItemAccounts.Remove(this);
					}
					this._ItemAccount1.Entity = value;
					if ((value != null))
					{
						value.ItemAccounts.Add(this);
						this._ParentID = value.ID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ItemAccount1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.ItemAccount = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.ItemAccount = null;
		}
		
		private void attach_ItemAccounts(ItemAccount entity)
		{
			this.SendPropertyChanging();
			entity.ItemAccount1 = this;
		}
		
		private void detach_ItemAccounts(ItemAccount entity)
		{
			this.SendPropertyChanging();
			entity.ItemAccount1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemType")]
	public partial class ItemType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public ItemType()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemType_Item", Storage="_Items", ThisKey="ID", OtherKey="ItemTypeID")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.ItemType = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.ItemType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogInHistory")]
	public partial class LogInHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private System.DateTime _LogInWhen;
		
		private bool _CanLogIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLogInWhenChanging(System.DateTime value);
    partial void OnLogInWhenChanged();
    partial void OnCanLogInChanging(bool value);
    partial void OnCanLogInChanged();
    #endregion
		
		public LogInHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogInWhen", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime LogInWhen
		{
			get
			{
				return this._LogInWhen;
			}
			set
			{
				if ((this._LogInWhen != value))
				{
					this.OnLogInWhenChanging(value);
					this.SendPropertyChanging();
					this._LogInWhen = value;
					this.SendPropertyChanged("LogInWhen");
					this.OnLogInWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanLogIn", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool CanLogIn
		{
			get
			{
				return this._CanLogIn;
			}
			set
			{
				if ((this._CanLogIn != value))
				{
					this.OnCanLogInChanging(value);
					this.SendPropertyChanging();
					this._CanLogIn = value;
					this.SendPropertyChanged("CanLogIn");
					this.OnCanLogInChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _NavigationTo;
		
		private int _Seq;
		
		private System.Nullable<int> _ParentMenuID;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<Menu> _Menus;
		
		private EntitySet<RoleMenu> _RoleMenus;
		
		private EntityRef<Menu> _Menu1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNavigationToChanging(string value);
    partial void OnNavigationToChanged();
    partial void OnSeqChanging(int value);
    partial void OnSeqChanged();
    partial void OnParentMenuIDChanging(System.Nullable<int> value);
    partial void OnParentMenuIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Menu()
		{
			this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
			this._RoleMenus = new EntitySet<RoleMenu>(new Action<RoleMenu>(this.attach_RoleMenus), new Action<RoleMenu>(this.detach_RoleMenus));
			this._Menu1 = default(EntityRef<Menu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NavigationTo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NavigationTo
		{
			get
			{
				return this._NavigationTo;
			}
			set
			{
				if ((this._NavigationTo != value))
				{
					this.OnNavigationToChanging(value);
					this.SendPropertyChanging();
					this._NavigationTo = value;
					this.SendPropertyChanged("NavigationTo");
					this.OnNavigationToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int NOT NULL")]
		public int Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMenuID", DbType="Int")]
		public System.Nullable<int> ParentMenuID
		{
			get
			{
				return this._ParentMenuID;
			}
			set
			{
				if ((this._ParentMenuID != value))
				{
					if (this._Menu1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentMenuIDChanging(value);
					this.SendPropertyChanging();
					this._ParentMenuID = value;
					this.SendPropertyChanged("ParentMenuID");
					this.OnParentMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu", Storage="_Menus", ThisKey="ID", OtherKey="ParentMenuID")]
		public EntitySet<Menu> Menus
		{
			get
			{
				return this._Menus;
			}
			set
			{
				this._Menus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_RoleMenu", Storage="_RoleMenus", ThisKey="ID", OtherKey="MenuID")]
		public EntitySet<RoleMenu> RoleMenus
		{
			get
			{
				return this._RoleMenus;
			}
			set
			{
				this._RoleMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu", Storage="_Menu1", ThisKey="ParentMenuID", OtherKey="ID", IsForeignKey=true)]
		public Menu Menu1
		{
			get
			{
				return this._Menu1.Entity;
			}
			set
			{
				Menu previousValue = this._Menu1.Entity;
				if (((previousValue != value) 
							|| (this._Menu1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu1.Entity = null;
						previousValue.Menus.Remove(this);
					}
					this._Menu1.Entity = value;
					if ((value != null))
					{
						value.Menus.Add(this);
						this._ParentMenuID = value.ID;
					}
					else
					{
						this._ParentMenuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Menu1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Menu1 = this;
		}
		
		private void detach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.Menu1 = null;
		}
		
		private void attach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_RoleMenus(RoleMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonthlyClosing")]
	public partial class MonthlyClosing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BranchID;
		
		private int _ClosingMonth;
		
		private int _ClosingYear;
		
		private bool _IsClosed;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnClosingMonthChanging(int value);
    partial void OnClosingMonthChanged();
    partial void OnClosingYearChanging(int value);
    partial void OnClosingYearChanged();
    partial void OnIsClosedChanging(bool value);
    partial void OnIsClosedChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public MonthlyClosing()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingMonth", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClosingMonth
		{
			get
			{
				return this._ClosingMonth;
			}
			set
			{
				if ((this._ClosingMonth != value))
				{
					this.OnClosingMonthChanging(value);
					this.SendPropertyChanging();
					this._ClosingMonth = value;
					this.SendPropertyChanged("ClosingMonth");
					this.OnClosingMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClosingYear
		{
			get
			{
				return this._ClosingYear;
			}
			set
			{
				if ((this._ClosingYear != value))
				{
					this.OnClosingYearChanging(value);
					this.SendPropertyChanging();
					this._ClosingYear = value;
					this.SendPropertyChanged("ClosingYear");
					this.OnClosingYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit NOT NULL")]
		public bool IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonthlyClosingHistory")]
	public partial class MonthlyClosingHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BranchID;
		
		private string _UserName;
		
		private bool _IsClosing;
		
		private string _Notes;
		
		private System.DateTime _CreatedWhen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIsClosingChanging(bool value);
    partial void OnIsClosingChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    #endregion
		
		public MonthlyClosingHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosing", DbType="Bit NOT NULL")]
		public bool IsClosing
		{
			get
			{
				return this._IsClosing;
			}
			set
			{
				if ((this._IsClosing != value))
				{
					this.OnIsClosingChanging(value);
					this.SendPropertyChanging();
					this._IsClosing = value;
					this.SendPropertyChanged("IsClosing");
					this.OnIsClosingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackageDetail")]
	public partial class PackageDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PackageID;
		
		private int _ItemID;
		
		private int _Quantity;
		
		private decimal _UnitPrice;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<PackageHeader> _PackageHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    #endregion
		
		public PackageDetail()
		{
			this._Item = default(EntityRef<Item>);
			this._PackageHeader = default(EntityRef<PackageHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._PackageHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(20,2) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_PackageDetail", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.PackageDetails.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.PackageDetails.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageHeader_PackageDetail", Storage="_PackageHeader", ThisKey="PackageID", OtherKey="ID", IsForeignKey=true)]
		public PackageHeader PackageHeader
		{
			get
			{
				return this._PackageHeader.Entity;
			}
			set
			{
				PackageHeader previousValue = this._PackageHeader.Entity;
				if (((previousValue != value) 
							|| (this._PackageHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageHeader.Entity = null;
						previousValue.PackageDetails.Remove(this);
					}
					this._PackageHeader.Entity = value;
					if ((value != null))
					{
						value.PackageDetails.Add(this);
						this._PackageID = value.ID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("PackageHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackageHeader")]
	public partial class PackageHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _PackageDuesInMonth;
		
		private decimal _FreezeFee;
		
		private bool _IsActive;
		
		private bool _OpenEnd;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<ActiveClassInPackage> _ActiveClassInPackages;
		
		private EntitySet<ActivePackageAtBranch> _ActivePackageAtBranches;
		
		private EntitySet<BillingDetail> _BillingDetails;
		
		private EntitySet<ClassPackage> _ClassPackages;
		
		private EntitySet<PackageDetail> _PackageDetails;
		
		private EntitySet<Contract> _Contracts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPackageDuesInMonthChanging(int value);
    partial void OnPackageDuesInMonthChanged();
    partial void OnFreezeFeeChanging(decimal value);
    partial void OnFreezeFeeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnOpenEndChanging(bool value);
    partial void OnOpenEndChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public PackageHeader()
		{
			this._ActiveClassInPackages = new EntitySet<ActiveClassInPackage>(new Action<ActiveClassInPackage>(this.attach_ActiveClassInPackages), new Action<ActiveClassInPackage>(this.detach_ActiveClassInPackages));
			this._ActivePackageAtBranches = new EntitySet<ActivePackageAtBranch>(new Action<ActivePackageAtBranch>(this.attach_ActivePackageAtBranches), new Action<ActivePackageAtBranch>(this.detach_ActivePackageAtBranches));
			this._BillingDetails = new EntitySet<BillingDetail>(new Action<BillingDetail>(this.attach_BillingDetails), new Action<BillingDetail>(this.detach_BillingDetails));
			this._ClassPackages = new EntitySet<ClassPackage>(new Action<ClassPackage>(this.attach_ClassPackages), new Action<ClassPackage>(this.detach_ClassPackages));
			this._PackageDetails = new EntitySet<PackageDetail>(new Action<PackageDetail>(this.attach_PackageDetails), new Action<PackageDetail>(this.detach_PackageDetails));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageDuesInMonth", DbType="Int NOT NULL")]
		public int PackageDuesInMonth
		{
			get
			{
				return this._PackageDuesInMonth;
			}
			set
			{
				if ((this._PackageDuesInMonth != value))
				{
					this.OnPackageDuesInMonthChanging(value);
					this.SendPropertyChanging();
					this._PackageDuesInMonth = value;
					this.SendPropertyChanged("PackageDuesInMonth");
					this.OnPackageDuesInMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreezeFee", DbType="Decimal(20,2) NOT NULL")]
		public decimal FreezeFee
		{
			get
			{
				return this._FreezeFee;
			}
			set
			{
				if ((this._FreezeFee != value))
				{
					this.OnFreezeFeeChanging(value);
					this.SendPropertyChanging();
					this._FreezeFee = value;
					this.SendPropertyChanged("FreezeFee");
					this.OnFreezeFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenEnd", DbType="Bit NOT NULL")]
		public bool OpenEnd
		{
			get
			{
				return this._OpenEnd;
			}
			set
			{
				if ((this._OpenEnd != value))
				{
					this.OnOpenEndChanging(value);
					this.SendPropertyChanging();
					this._OpenEnd = value;
					this.SendPropertyChanged("OpenEnd");
					this.OnOpenEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageHeader_ActiveClassInPackage", Storage="_ActiveClassInPackages", ThisKey="ID", OtherKey="PackageID")]
		public EntitySet<ActiveClassInPackage> ActiveClassInPackages
		{
			get
			{
				return this._ActiveClassInPackages;
			}
			set
			{
				this._ActiveClassInPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageHeader_ActivePackageAtBranch", Storage="_ActivePackageAtBranches", ThisKey="ID", OtherKey="PackageID")]
		public EntitySet<ActivePackageAtBranch> ActivePackageAtBranches
		{
			get
			{
				return this._ActivePackageAtBranches;
			}
			set
			{
				this._ActivePackageAtBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageHeader_BillingDetail", Storage="_BillingDetails", ThisKey="ID", OtherKey="PackageID")]
		public EntitySet<BillingDetail> BillingDetails
		{
			get
			{
				return this._BillingDetails;
			}
			set
			{
				this._BillingDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageHeader_ClassPackage", Storage="_ClassPackages", ThisKey="ID", OtherKey="PackageID")]
		public EntitySet<ClassPackage> ClassPackages
		{
			get
			{
				return this._ClassPackages;
			}
			set
			{
				this._ClassPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageHeader_PackageDetail", Storage="_PackageDetails", ThisKey="ID", OtherKey="PackageID")]
		public EntitySet<PackageDetail> PackageDetails
		{
			get
			{
				return this._PackageDetails;
			}
			set
			{
				this._PackageDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageHeader_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="PackageID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActiveClassInPackages(ActiveClassInPackage entity)
		{
			this.SendPropertyChanging();
			entity.PackageHeader = this;
		}
		
		private void detach_ActiveClassInPackages(ActiveClassInPackage entity)
		{
			this.SendPropertyChanging();
			entity.PackageHeader = null;
		}
		
		private void attach_ActivePackageAtBranches(ActivePackageAtBranch entity)
		{
			this.SendPropertyChanging();
			entity.PackageHeader = this;
		}
		
		private void detach_ActivePackageAtBranches(ActivePackageAtBranch entity)
		{
			this.SendPropertyChanging();
			entity.PackageHeader = null;
		}
		
		private void attach_BillingDetails(BillingDetail entity)
		{
			this.SendPropertyChanging();
			entity.PackageHeader = this;
		}
		
		private void detach_BillingDetails(BillingDetail entity)
		{
			this.SendPropertyChanging();
			entity.PackageHeader = null;
		}
		
		private void attach_ClassPackages(ClassPackage entity)
		{
			this.SendPropertyChanging();
			entity.PackageHeader = this;
		}
		
		private void detach_ClassPackages(ClassPackage entity)
		{
			this.SendPropertyChanging();
			entity.PackageHeader = null;
		}
		
		private void attach_PackageDetails(PackageDetail entity)
		{
			this.SendPropertyChanging();
			entity.PackageHeader = this;
		}
		
		private void detach_PackageDetails(PackageDetail entity)
		{
			this.SendPropertyChanging();
			entity.PackageHeader = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.PackageHeader = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.PackageHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentDetail")]
	public partial class PaymentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PaymentID;
		
		private System.Nullable<int> _CreditCardTypeID;
		
		private decimal _Amount;
		
		private int _PaymentTypeID;
		
		private string _ApprovalCode;
		
		private string _Notes;
		
		private EntityRef<CreditCardType> _CreditCardType;
		
		private EntityRef<PaymentHeader> _PaymentHeader;
		
		private EntityRef<PaymentType> _PaymentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPaymentIDChanging(int value);
    partial void OnPaymentIDChanged();
    partial void OnCreditCardTypeIDChanging(System.Nullable<int> value);
    partial void OnCreditCardTypeIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPaymentTypeIDChanging(int value);
    partial void OnPaymentTypeIDChanged();
    partial void OnApprovalCodeChanging(string value);
    partial void OnApprovalCodeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public PaymentDetail()
		{
			this._CreditCardType = default(EntityRef<CreditCardType>);
			this._PaymentHeader = default(EntityRef<PaymentHeader>);
			this._PaymentType = default(EntityRef<PaymentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="Int NOT NULL")]
		public int PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					if (this._PaymentHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardTypeID", DbType="Int")]
		public System.Nullable<int> CreditCardTypeID
		{
			get
			{
				return this._CreditCardTypeID;
			}
			set
			{
				if ((this._CreditCardTypeID != value))
				{
					if (this._CreditCardType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreditCardTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CreditCardTypeID = value;
					this.SendPropertyChanged("CreditCardTypeID");
					this.OnCreditCardTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(20,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeID", DbType="Int NOT NULL")]
		public int PaymentTypeID
		{
			get
			{
				return this._PaymentTypeID;
			}
			set
			{
				if ((this._PaymentTypeID != value))
				{
					if (this._PaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeID = value;
					this.SendPropertyChanged("PaymentTypeID");
					this.OnPaymentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalCode", DbType="VarChar(30)")]
		public string ApprovalCode
		{
			get
			{
				return this._ApprovalCode;
			}
			set
			{
				if ((this._ApprovalCode != value))
				{
					this.OnApprovalCodeChanging(value);
					this.SendPropertyChanging();
					this._ApprovalCode = value;
					this.SendPropertyChanged("ApprovalCode");
					this.OnApprovalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCardType_PaymentDetail", Storage="_CreditCardType", ThisKey="CreditCardTypeID", OtherKey="ID", IsForeignKey=true)]
		public CreditCardType CreditCardType
		{
			get
			{
				return this._CreditCardType.Entity;
			}
			set
			{
				CreditCardType previousValue = this._CreditCardType.Entity;
				if (((previousValue != value) 
							|| (this._CreditCardType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditCardType.Entity = null;
						previousValue.PaymentDetails.Remove(this);
					}
					this._CreditCardType.Entity = value;
					if ((value != null))
					{
						value.PaymentDetails.Add(this);
						this._CreditCardTypeID = value.ID;
					}
					else
					{
						this._CreditCardTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CreditCardType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentHeader_PaymentDetail", Storage="_PaymentHeader", ThisKey="PaymentID", OtherKey="ID", IsForeignKey=true)]
		public PaymentHeader PaymentHeader
		{
			get
			{
				return this._PaymentHeader.Entity;
			}
			set
			{
				PaymentHeader previousValue = this._PaymentHeader.Entity;
				if (((previousValue != value) 
							|| (this._PaymentHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentHeader.Entity = null;
						previousValue.PaymentDetails.Remove(this);
					}
					this._PaymentHeader.Entity = value;
					if ((value != null))
					{
						value.PaymentDetails.Add(this);
						this._PaymentID = value.ID;
					}
					else
					{
						this._PaymentID = default(int);
					}
					this.SendPropertyChanged("PaymentHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_PaymentDetail", Storage="_PaymentType", ThisKey="PaymentTypeID", OtherKey="ID", IsForeignKey=true)]
		public PaymentType PaymentType
		{
			get
			{
				return this._PaymentType.Entity;
			}
			set
			{
				PaymentType previousValue = this._PaymentType.Entity;
				if (((previousValue != value) 
							|| (this._PaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentType.Entity = null;
						previousValue.PaymentDetails.Remove(this);
					}
					this._PaymentType.Entity = value;
					if ((value != null))
					{
						value.PaymentDetails.Add(this);
						this._PaymentTypeID = value.ID;
					}
					else
					{
						this._PaymentTypeID = default(int);
					}
					this.SendPropertyChanged("PaymentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentHeader")]
	public partial class PaymentHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PaymentNo;
		
		private System.DateTime _Date;
		
		private int _InvoiceID;
		
		private System.Nullable<System.DateTime> _VoidDate;
		
		private string _VoidReason;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<PaymentDetail> _PaymentDetails;
		
		private EntityRef<InvoiceHeader> _InvoiceHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPaymentNoChanging(string value);
    partial void OnPaymentNoChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnVoidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVoidDateChanged();
    partial void OnVoidReasonChanging(string value);
    partial void OnVoidReasonChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public PaymentHeader()
		{
			this._PaymentDetails = new EntitySet<PaymentDetail>(new Action<PaymentDetail>(this.attach_PaymentDetails), new Action<PaymentDetail>(this.detach_PaymentDetails));
			this._InvoiceHeader = default(EntityRef<InvoiceHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNo", DbType="VarChar(20)")]
		public string PaymentNo
		{
			get
			{
				return this._PaymentNo;
			}
			set
			{
				if ((this._PaymentNo != value))
				{
					this.OnPaymentNoChanging(value);
					this.SendPropertyChanging();
					this._PaymentNo = value;
					this.SendPropertyChanged("PaymentNo");
					this.OnPaymentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL")]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VoidDate
		{
			get
			{
				return this._VoidDate;
			}
			set
			{
				if ((this._VoidDate != value))
				{
					this.OnVoidDateChanging(value);
					this.SendPropertyChanging();
					this._VoidDate = value;
					this.SendPropertyChanged("VoidDate");
					this.OnVoidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidReason", DbType="VarChar(500)")]
		public string VoidReason
		{
			get
			{
				return this._VoidReason;
			}
			set
			{
				if ((this._VoidReason != value))
				{
					this.OnVoidReasonChanging(value);
					this.SendPropertyChanging();
					this._VoidReason = value;
					this.SendPropertyChanged("VoidReason");
					this.OnVoidReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentHeader_PaymentDetail", Storage="_PaymentDetails", ThisKey="ID", OtherKey="PaymentID")]
		public EntitySet<PaymentDetail> PaymentDetails
		{
			get
			{
				return this._PaymentDetails;
			}
			set
			{
				this._PaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceHeader_PaymentHeader", Storage="_InvoiceHeader", ThisKey="InvoiceID", OtherKey="ID", IsForeignKey=true)]
		public InvoiceHeader InvoiceHeader
		{
			get
			{
				return this._InvoiceHeader.Entity;
			}
			set
			{
				InvoiceHeader previousValue = this._InvoiceHeader.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceHeader.Entity = null;
						previousValue.PaymentHeaders.Remove(this);
					}
					this._InvoiceHeader.Entity = value;
					if ((value != null))
					{
						value.PaymentHeaders.Add(this);
						this._InvoiceID = value.ID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentDetails(PaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.PaymentHeader = this;
		}
		
		private void detach_PaymentDetails(PaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.PaymentHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentType")]
	public partial class PaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Description;
		
		private bool _IsActive;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private EntitySet<PaymentDetail> _PaymentDetails;
		
		private EntitySet<PaymentAccrualDetail> _PaymentAccrualDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    #endregion
		
		public PaymentType()
		{
			this._PaymentDetails = new EntitySet<PaymentDetail>(new Action<PaymentDetail>(this.attach_PaymentDetails), new Action<PaymentDetail>(this.detach_PaymentDetails));
			this._PaymentAccrualDetails = new EntitySet<PaymentAccrualDetail>(new Action<PaymentAccrualDetail>(this.attach_PaymentAccrualDetails), new Action<PaymentAccrualDetail>(this.detach_PaymentAccrualDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_PaymentDetail", Storage="_PaymentDetails", ThisKey="ID", OtherKey="PaymentTypeID")]
		public EntitySet<PaymentDetail> PaymentDetails
		{
			get
			{
				return this._PaymentDetails;
			}
			set
			{
				this._PaymentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_PaymentAccrualDetail", Storage="_PaymentAccrualDetails", ThisKey="ID", OtherKey="PaymentTypeID")]
		public EntitySet<PaymentAccrualDetail> PaymentAccrualDetails
		{
			get
			{
				return this._PaymentAccrualDetails;
			}
			set
			{
				this._PaymentAccrualDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentDetails(PaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = this;
		}
		
		private void detach_PaymentDetails(PaymentDetail entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = null;
		}
		
		private void attach_PaymentAccrualDetails(PaymentAccrualDetail entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = this;
		}
		
		private void detach_PaymentAccrualDetails(PaymentAccrualDetail entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CustomerID;
		
		private string _Connection;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _Email;
		
		private string _IDCardNo;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private string _Photo;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnConnectionChanging(string value);
    partial void OnConnectionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIDCardNoChanging(string value);
    partial void OnIDCardNoChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Person()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Connection", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Connection
		{
			get
			{
				return this._Connection;
			}
			set
			{
				if ((this._Connection != value))
				{
					this.OnConnectionChanging(value);
					this.SendPropertyChanging();
					this._Connection = value;
					this.SendPropertyChanged("Connection");
					this.OnConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCardNo", DbType="VarChar(20)")]
		public string IDCardNo
		{
			get
			{
				return this._IDCardNo;
			}
			set
			{
				if ((this._IDCardNo != value))
				{
					this.OnIDCardNoChanging(value);
					this.SendPropertyChanging();
					this._IDCardNo = value;
					this.SendPropertyChanged("IDCardNo");
					this.OnIDCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="VarChar(20)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="VarChar(20)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarChar(50)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Person", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleMenu")]
	public partial class RoleMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleName;
		
		private int _MenuID;
		
		private EntityRef<Menu> _Menu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnMenuIDChanging(int value);
    partial void OnMenuIDChanged();
    #endregion
		
		public RoleMenu()
		{
			this._Menu = default(EntityRef<Menu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_RoleMenu", Storage="_Menu", ThisKey="MenuID", OtherKey="ID", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.RoleMenus.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.RoleMenus.Add(this);
						this._MenuID = value.ID;
					}
					else
					{
						this._MenuID = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllCustomersDetail")]
	public partial class AllCustomersDetail
	{
		
		private System.Nullable<int> _HomeBranchID;
		
		private int _CustomerID;
		
		private string _CustomerBarcode;
		
		private string _Name;
		
		private string _Branch;
		
		private int _CustomerStatusID;
		
		private string _Status;
		
		private string _Email;
		
		private string _HomePhone;
		
		private System.Nullable<int> _PackageID;
		
		private string _Package;
		
		private string _ContractStatus;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<System.DateTime> _NextDuesDate;
		
		private System.Nullable<System.DateTime> _ActiveDate;
		
		private System.Nullable<decimal> _DuesAmount;
		
		private string _ContractNo;
		
		private string _StatusMembership;
		
		private string _BillingTypeDescription;
		
		private System.Nullable<int> _BillingTypeID;
		
		public AllCustomersDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeBranchID", DbType="Int")]
		public System.Nullable<int> HomeBranchID
		{
			get
			{
				return this._HomeBranchID;
			}
			set
			{
				if ((this._HomeBranchID != value))
				{
					this._HomeBranchID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerBarcode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CustomerBarcode
		{
			get
			{
				return this._CustomerBarcode;
			}
			set
			{
				if ((this._CustomerBarcode != value))
				{
					this._CustomerBarcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(101)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this._Branch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerStatusID", DbType="Int NOT NULL")]
		public int CustomerStatusID
		{
			get
			{
				return this._CustomerStatusID;
			}
			set
			{
				if ((this._CustomerStatusID != value))
				{
					this._CustomerStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="VarChar(20)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this._HomePhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int")]
		public System.Nullable<int> PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					this._PackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Package", DbType="VarChar(50)")]
		public string Package
		{
			get
			{
				return this._Package;
			}
			set
			{
				if ((this._Package != value))
				{
					this._Package = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractStatus", DbType="VarChar(6)")]
		public string ContractStatus
		{
			get
			{
				return this._ContractStatus;
			}
			set
			{
				if ((this._ContractStatus != value))
				{
					this._ContractStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this._EffectiveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextDuesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextDuesDate
		{
			get
			{
				return this._NextDuesDate;
			}
			set
			{
				if ((this._NextDuesDate != value))
				{
					this._NextDuesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActiveDate
		{
			get
			{
				return this._ActiveDate;
			}
			set
			{
				if ((this._ActiveDate != value))
				{
					this._ActiveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuesAmount", DbType="Decimal(20,2)")]
		public System.Nullable<decimal> DuesAmount
		{
			get
			{
				return this._DuesAmount;
			}
			set
			{
				if ((this._DuesAmount != value))
				{
					this._DuesAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="VarChar(20)")]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this._ContractNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusMembership", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string StatusMembership
		{
			get
			{
				return this._StatusMembership;
			}
			set
			{
				if ((this._StatusMembership != value))
				{
					this._StatusMembership = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingTypeDescription", DbType="VarChar(50)")]
		public string BillingTypeDescription
		{
			get
			{
				return this._BillingTypeDescription;
			}
			set
			{
				if ((this._BillingTypeDescription != value))
				{
					this._BillingTypeDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingTypeID", DbType="Int")]
		public System.Nullable<int> BillingTypeID
		{
			get
			{
				return this._BillingTypeID;
			}
			set
			{
				if ((this._BillingTypeID != value))
				{
					this._BillingTypeID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceSummary")]
	public partial class InvoiceSummary
	{
		
		private string _Branch;
		
		private string _InvoiceNo;
		
		private string _ContractNo;
		
		private System.DateTime _Date;
		
		private string _InvoiceType;
		
		private string _Package;
		
		private System.Nullable<System.DateTime> _VoidDate;
		
		private string _VoidReason;
		
		private string _Barcode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<decimal> _TotalInvoice;
		
		private string _PaymentNo;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private decimal _TotalPayment;
		
		public InvoiceSummary()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this._Branch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this._ContractNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="VarChar(15)")]
		public string InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this._InvoiceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Package", DbType="VarChar(50)")]
		public string Package
		{
			get
			{
				return this._Package;
			}
			set
			{
				if ((this._Package != value))
				{
					this._Package = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VoidDate
		{
			get
			{
				return this._VoidDate;
			}
			set
			{
				if ((this._VoidDate != value))
				{
					this._VoidDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidReason", DbType="VarChar(2000)")]
		public string VoidReason
		{
			get
			{
				return this._VoidReason;
			}
			set
			{
				if ((this._VoidReason != value))
				{
					this._VoidReason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="VarChar(30)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this._Barcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalInvoice", DbType="Decimal(38,6)")]
		public System.Nullable<decimal> TotalInvoice
		{
			get
			{
				return this._TotalInvoice;
			}
			set
			{
				if ((this._TotalInvoice != value))
				{
					this._TotalInvoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNo", DbType="VarChar(20)")]
		public string PaymentNo
		{
			get
			{
				return this._PaymentNo;
			}
			set
			{
				if ((this._PaymentNo != value))
				{
					this._PaymentNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this._PaymentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPayment", DbType="Decimal(38,2) NOT NULL")]
		public decimal TotalPayment
		{
			get
			{
				return this._TotalPayment;
			}
			set
			{
				if ((this._TotalPayment != value))
				{
					this._TotalPayment = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractStatus")]
	public partial class ContractStatus
	{
		
		private string _Code;
		
		private string _Value;
		
		public ContractStatus()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CreditCardChangeHistory")]
	public partial class CreditCardChangeHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CustomerID;
		
		private int _CreditCardTypeID;
		
		private int _BankID;
		
		private string _CreditCardNo;
		
		private string _CreditCardHolderName;
		
		private System.DateTime _CreditCardExpiredDate;
		
		private string _CreditCardIDNo;
		
		private string _Reason;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntityRef<Bank> _Bank;
		
		private EntityRef<CreditCardType> _CreditCardType;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnCreditCardTypeIDChanging(int value);
    partial void OnCreditCardTypeIDChanged();
    partial void OnBankIDChanging(int value);
    partial void OnBankIDChanged();
    partial void OnCreditCardNoChanging(string value);
    partial void OnCreditCardNoChanged();
    partial void OnCreditCardHolderNameChanging(string value);
    partial void OnCreditCardHolderNameChanged();
    partial void OnCreditCardExpiredDateChanging(System.DateTime value);
    partial void OnCreditCardExpiredDateChanged();
    partial void OnCreditCardIDNoChanging(string value);
    partial void OnCreditCardIDNoChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public CreditCardChangeHistory()
		{
			this._Bank = default(EntityRef<Bank>);
			this._CreditCardType = default(EntityRef<CreditCardType>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardTypeID", DbType="Int NOT NULL")]
		public int CreditCardTypeID
		{
			get
			{
				return this._CreditCardTypeID;
			}
			set
			{
				if ((this._CreditCardTypeID != value))
				{
					if (this._CreditCardType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreditCardTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CreditCardTypeID = value;
					this.SendPropertyChanged("CreditCardTypeID");
					this.OnCreditCardTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					if (this._Bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreditCardNo
		{
			get
			{
				return this._CreditCardNo;
			}
			set
			{
				if ((this._CreditCardNo != value))
				{
					this.OnCreditCardNoChanging(value);
					this.SendPropertyChanging();
					this._CreditCardNo = value;
					this.SendPropertyChanged("CreditCardNo");
					this.OnCreditCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardHolderName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreditCardHolderName
		{
			get
			{
				return this._CreditCardHolderName;
			}
			set
			{
				if ((this._CreditCardHolderName != value))
				{
					this.OnCreditCardHolderNameChanging(value);
					this.SendPropertyChanging();
					this._CreditCardHolderName = value;
					this.SendPropertyChanged("CreditCardHolderName");
					this.OnCreditCardHolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardExpiredDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreditCardExpiredDate
		{
			get
			{
				return this._CreditCardExpiredDate;
			}
			set
			{
				if ((this._CreditCardExpiredDate != value))
				{
					this.OnCreditCardExpiredDateChanging(value);
					this.SendPropertyChanging();
					this._CreditCardExpiredDate = value;
					this.SendPropertyChanged("CreditCardExpiredDate");
					this.OnCreditCardExpiredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardIDNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreditCardIDNo
		{
			get
			{
				return this._CreditCardIDNo;
			}
			set
			{
				if ((this._CreditCardIDNo != value))
				{
					this.OnCreditCardIDNoChanging(value);
					this.SendPropertyChanging();
					this._CreditCardIDNo = value;
					this.SendPropertyChanged("CreditCardIDNo");
					this.OnCreditCardIDNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="VarChar(1000)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_CreditCardChangeHistory", Storage="_Bank", ThisKey="BankID", OtherKey="ID", IsForeignKey=true)]
		public Bank Bank
		{
			get
			{
				return this._Bank.Entity;
			}
			set
			{
				Bank previousValue = this._Bank.Entity;
				if (((previousValue != value) 
							|| (this._Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank.Entity = null;
						previousValue.CreditCardChangeHistories.Remove(this);
					}
					this._Bank.Entity = value;
					if ((value != null))
					{
						value.CreditCardChangeHistories.Add(this);
						this._BankID = value.ID;
					}
					else
					{
						this._BankID = default(int);
					}
					this.SendPropertyChanged("Bank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCardType_CreditCardChangeHistory", Storage="_CreditCardType", ThisKey="CreditCardTypeID", OtherKey="ID", IsForeignKey=true)]
		public CreditCardType CreditCardType
		{
			get
			{
				return this._CreditCardType.Entity;
			}
			set
			{
				CreditCardType previousValue = this._CreditCardType.Entity;
				if (((previousValue != value) 
							|| (this._CreditCardType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditCardType.Entity = null;
						previousValue.CreditCardChangeHistories.Remove(this);
					}
					this._CreditCardType.Entity = value;
					if ((value != null))
					{
						value.CreditCardChangeHistories.Add(this);
						this._CreditCardTypeID = value.ID;
					}
					else
					{
						this._CreditCardTypeID = default(int);
					}
					this.SendPropertyChanged("CreditCardType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CreditCardChangeHistory", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CreditCardChangeHistories.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CreditCardChangeHistories.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesTarget")]
	public partial class SalesTarget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BranchID;
		
		private int _Year;
		
		private int _Month;
		
		private int _FreshMemberUnit;
		
		private int _UpgradeUnit;
		
		private int _RenewalUnit;
		
		private int _TotalUnitSold;
		
		private decimal _FreshMemberRevenue;
		
		private decimal _UpgradeRevenue;
		
		private decimal _RenewalRevenue;
		
		private decimal _TotalMemberRevenue;
		
		private decimal _PilatesRevenue;
		
		private decimal _VocalRevenue;
		
		private decimal _EFTCollectionRevenue;
		
		private int _DropOffUnit;
		
		private decimal _CancelFees;
		
		private int _FreezeUnit;
		
		private decimal _FreezeFees;
		
		private decimal _OtherRevenue;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnFreshMemberUnitChanging(int value);
    partial void OnFreshMemberUnitChanged();
    partial void OnUpgradeUnitChanging(int value);
    partial void OnUpgradeUnitChanged();
    partial void OnRenewalUnitChanging(int value);
    partial void OnRenewalUnitChanged();
    partial void OnTotalUnitSoldChanging(int value);
    partial void OnTotalUnitSoldChanged();
    partial void OnFreshMemberRevenueChanging(decimal value);
    partial void OnFreshMemberRevenueChanged();
    partial void OnUpgradeRevenueChanging(decimal value);
    partial void OnUpgradeRevenueChanged();
    partial void OnRenewalRevenueChanging(decimal value);
    partial void OnRenewalRevenueChanged();
    partial void OnTotalMemberRevenueChanging(decimal value);
    partial void OnTotalMemberRevenueChanged();
    partial void OnPilatesRevenueChanging(decimal value);
    partial void OnPilatesRevenueChanged();
    partial void OnVocalRevenueChanging(decimal value);
    partial void OnVocalRevenueChanged();
    partial void OnEFTCollectionRevenueChanging(decimal value);
    partial void OnEFTCollectionRevenueChanged();
    partial void OnDropOffUnitChanging(int value);
    partial void OnDropOffUnitChanged();
    partial void OnCancelFeesChanging(decimal value);
    partial void OnCancelFeesChanged();
    partial void OnFreezeUnitChanging(int value);
    partial void OnFreezeUnitChanged();
    partial void OnFreezeFeesChanging(decimal value);
    partial void OnFreezeFeesChanged();
    partial void OnOtherRevenueChanging(decimal value);
    partial void OnOtherRevenueChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public SalesTarget()
		{
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreshMemberUnit", DbType="Int NOT NULL")]
		public int FreshMemberUnit
		{
			get
			{
				return this._FreshMemberUnit;
			}
			set
			{
				if ((this._FreshMemberUnit != value))
				{
					this.OnFreshMemberUnitChanging(value);
					this.SendPropertyChanging();
					this._FreshMemberUnit = value;
					this.SendPropertyChanged("FreshMemberUnit");
					this.OnFreshMemberUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeUnit", DbType="Int NOT NULL")]
		public int UpgradeUnit
		{
			get
			{
				return this._UpgradeUnit;
			}
			set
			{
				if ((this._UpgradeUnit != value))
				{
					this.OnUpgradeUnitChanging(value);
					this.SendPropertyChanging();
					this._UpgradeUnit = value;
					this.SendPropertyChanged("UpgradeUnit");
					this.OnUpgradeUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenewalUnit", DbType="Int NOT NULL")]
		public int RenewalUnit
		{
			get
			{
				return this._RenewalUnit;
			}
			set
			{
				if ((this._RenewalUnit != value))
				{
					this.OnRenewalUnitChanging(value);
					this.SendPropertyChanging();
					this._RenewalUnit = value;
					this.SendPropertyChanged("RenewalUnit");
					this.OnRenewalUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUnitSold", DbType="Int NOT NULL")]
		public int TotalUnitSold
		{
			get
			{
				return this._TotalUnitSold;
			}
			set
			{
				if ((this._TotalUnitSold != value))
				{
					this.OnTotalUnitSoldChanging(value);
					this.SendPropertyChanging();
					this._TotalUnitSold = value;
					this.SendPropertyChanged("TotalUnitSold");
					this.OnTotalUnitSoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreshMemberRevenue", DbType="Decimal(20,2) NOT NULL")]
		public decimal FreshMemberRevenue
		{
			get
			{
				return this._FreshMemberRevenue;
			}
			set
			{
				if ((this._FreshMemberRevenue != value))
				{
					this.OnFreshMemberRevenueChanging(value);
					this.SendPropertyChanging();
					this._FreshMemberRevenue = value;
					this.SendPropertyChanged("FreshMemberRevenue");
					this.OnFreshMemberRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpgradeRevenue", DbType="Decimal(20,2) NOT NULL")]
		public decimal UpgradeRevenue
		{
			get
			{
				return this._UpgradeRevenue;
			}
			set
			{
				if ((this._UpgradeRevenue != value))
				{
					this.OnUpgradeRevenueChanging(value);
					this.SendPropertyChanging();
					this._UpgradeRevenue = value;
					this.SendPropertyChanged("UpgradeRevenue");
					this.OnUpgradeRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenewalRevenue", DbType="Decimal(20,2) NOT NULL")]
		public decimal RenewalRevenue
		{
			get
			{
				return this._RenewalRevenue;
			}
			set
			{
				if ((this._RenewalRevenue != value))
				{
					this.OnRenewalRevenueChanging(value);
					this.SendPropertyChanging();
					this._RenewalRevenue = value;
					this.SendPropertyChanged("RenewalRevenue");
					this.OnRenewalRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMemberRevenue", DbType="Decimal(20,2) NOT NULL")]
		public decimal TotalMemberRevenue
		{
			get
			{
				return this._TotalMemberRevenue;
			}
			set
			{
				if ((this._TotalMemberRevenue != value))
				{
					this.OnTotalMemberRevenueChanging(value);
					this.SendPropertyChanging();
					this._TotalMemberRevenue = value;
					this.SendPropertyChanged("TotalMemberRevenue");
					this.OnTotalMemberRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PilatesRevenue", DbType="Decimal(20,2) NOT NULL")]
		public decimal PilatesRevenue
		{
			get
			{
				return this._PilatesRevenue;
			}
			set
			{
				if ((this._PilatesRevenue != value))
				{
					this.OnPilatesRevenueChanging(value);
					this.SendPropertyChanging();
					this._PilatesRevenue = value;
					this.SendPropertyChanged("PilatesRevenue");
					this.OnPilatesRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VocalRevenue", DbType="Decimal(20,2) NOT NULL")]
		public decimal VocalRevenue
		{
			get
			{
				return this._VocalRevenue;
			}
			set
			{
				if ((this._VocalRevenue != value))
				{
					this.OnVocalRevenueChanging(value);
					this.SendPropertyChanging();
					this._VocalRevenue = value;
					this.SendPropertyChanged("VocalRevenue");
					this.OnVocalRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EFTCollectionRevenue", DbType="Decimal(20,2) NOT NULL")]
		public decimal EFTCollectionRevenue
		{
			get
			{
				return this._EFTCollectionRevenue;
			}
			set
			{
				if ((this._EFTCollectionRevenue != value))
				{
					this.OnEFTCollectionRevenueChanging(value);
					this.SendPropertyChanging();
					this._EFTCollectionRevenue = value;
					this.SendPropertyChanged("EFTCollectionRevenue");
					this.OnEFTCollectionRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropOffUnit", DbType="Int NOT NULL")]
		public int DropOffUnit
		{
			get
			{
				return this._DropOffUnit;
			}
			set
			{
				if ((this._DropOffUnit != value))
				{
					this.OnDropOffUnitChanging(value);
					this.SendPropertyChanging();
					this._DropOffUnit = value;
					this.SendPropertyChanged("DropOffUnit");
					this.OnDropOffUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelFees", DbType="Decimal(20,2) NOT NULL")]
		public decimal CancelFees
		{
			get
			{
				return this._CancelFees;
			}
			set
			{
				if ((this._CancelFees != value))
				{
					this.OnCancelFeesChanging(value);
					this.SendPropertyChanging();
					this._CancelFees = value;
					this.SendPropertyChanged("CancelFees");
					this.OnCancelFeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreezeUnit", DbType="Int NOT NULL")]
		public int FreezeUnit
		{
			get
			{
				return this._FreezeUnit;
			}
			set
			{
				if ((this._FreezeUnit != value))
				{
					this.OnFreezeUnitChanging(value);
					this.SendPropertyChanging();
					this._FreezeUnit = value;
					this.SendPropertyChanged("FreezeUnit");
					this.OnFreezeUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreezeFees", DbType="Decimal(20,2) NOT NULL")]
		public decimal FreezeFees
		{
			get
			{
				return this._FreezeFees;
			}
			set
			{
				if ((this._FreezeFees != value))
				{
					this.OnFreezeFeesChanging(value);
					this.SendPropertyChanging();
					this._FreezeFees = value;
					this.SendPropertyChanged("FreezeFees");
					this.OnFreezeFeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherRevenue", DbType="Decimal(20,2) NOT NULL")]
		public decimal OtherRevenue
		{
			get
			{
				return this._OtherRevenue;
			}
			set
			{
				if ((this._OtherRevenue != value))
				{
					this.OnOtherRevenueChanging(value);
					this.SendPropertyChanging();
					this._OtherRevenue = value;
					this.SendPropertyChanged("OtherRevenue");
					this.OnOtherRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_SalesTarget", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.SalesTargets.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.SalesTargets.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Barcode;
		
		private string _UserName;
		
		private int _HomeBranchID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Phone;
		
		private string _Photo;
		
		private bool _CanApproveDocument;
		
		private bool _CanEditActiveContract;
		
		private bool _CanReprint;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<ChangeStatusDocument> _ChangeStatusDocuments;
		
		private EntitySet<CheckInLog> _CheckInLogs;
		
		private EntitySet<InvoiceHeader> _InvoiceHeaders;
		
		private EntitySet<Prospect> _Prospects;
		
		private EntitySet<ProspectFollowUp> _ProspectFollowUps;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnHomeBranchIDChanging(int value);
    partial void OnHomeBranchIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnCanApproveDocumentChanging(bool value);
    partial void OnCanApproveDocumentChanged();
    partial void OnCanEditActiveContractChanging(bool value);
    partial void OnCanEditActiveContractChanged();
    partial void OnCanReprintChanging(bool value);
    partial void OnCanReprintChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Employee()
		{
			this._ChangeStatusDocuments = new EntitySet<ChangeStatusDocument>(new Action<ChangeStatusDocument>(this.attach_ChangeStatusDocuments), new Action<ChangeStatusDocument>(this.detach_ChangeStatusDocuments));
			this._CheckInLogs = new EntitySet<CheckInLog>(new Action<CheckInLog>(this.attach_CheckInLogs), new Action<CheckInLog>(this.detach_CheckInLogs));
			this._InvoiceHeaders = new EntitySet<InvoiceHeader>(new Action<InvoiceHeader>(this.attach_InvoiceHeaders), new Action<InvoiceHeader>(this.detach_InvoiceHeaders));
			this._Prospects = new EntitySet<Prospect>(new Action<Prospect>(this.attach_Prospects), new Action<Prospect>(this.detach_Prospects));
			this._ProspectFollowUps = new EntitySet<ProspectFollowUp>(new Action<ProspectFollowUp>(this.attach_ProspectFollowUps), new Action<ProspectFollowUp>(this.detach_ProspectFollowUps));
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeBranchID", DbType="Int NOT NULL")]
		public int HomeBranchID
		{
			get
			{
				return this._HomeBranchID;
			}
			set
			{
				if ((this._HomeBranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHomeBranchIDChanging(value);
					this.SendPropertyChanging();
					this._HomeBranchID = value;
					this.SendPropertyChanged("HomeBranchID");
					this.OnHomeBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarChar(50)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanApproveDocument", DbType="Bit NOT NULL")]
		public bool CanApproveDocument
		{
			get
			{
				return this._CanApproveDocument;
			}
			set
			{
				if ((this._CanApproveDocument != value))
				{
					this.OnCanApproveDocumentChanging(value);
					this.SendPropertyChanging();
					this._CanApproveDocument = value;
					this.SendPropertyChanged("CanApproveDocument");
					this.OnCanApproveDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEditActiveContract", DbType="Bit NOT NULL")]
		public bool CanEditActiveContract
		{
			get
			{
				return this._CanEditActiveContract;
			}
			set
			{
				if ((this._CanEditActiveContract != value))
				{
					this.OnCanEditActiveContractChanging(value);
					this.SendPropertyChanging();
					this._CanEditActiveContract = value;
					this.SendPropertyChanged("CanEditActiveContract");
					this.OnCanEditActiveContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanReprint", DbType="Bit NOT NULL")]
		public bool CanReprint
		{
			get
			{
				return this._CanReprint;
			}
			set
			{
				if ((this._CanReprint != value))
				{
					this.OnCanReprintChanging(value);
					this.SendPropertyChanging();
					this._CanReprint = value;
					this.SendPropertyChanged("CanReprint");
					this.OnCanReprintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ChangeStatusDocument", Storage="_ChangeStatusDocuments", ThisKey="ID", OtherKey="EmployeeID")]
		public EntitySet<ChangeStatusDocument> ChangeStatusDocuments
		{
			get
			{
				return this._ChangeStatusDocuments;
			}
			set
			{
				this._ChangeStatusDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CheckInLog", Storage="_CheckInLogs", ThisKey="ID", OtherKey="EmployeeID")]
		public EntitySet<CheckInLog> CheckInLogs
		{
			get
			{
				return this._CheckInLogs;
			}
			set
			{
				this._CheckInLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_InvoiceHeader", Storage="_InvoiceHeaders", ThisKey="ID", OtherKey="EmployeeID")]
		public EntitySet<InvoiceHeader> InvoiceHeaders
		{
			get
			{
				return this._InvoiceHeaders;
			}
			set
			{
				this._InvoiceHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Prospect", Storage="_Prospects", ThisKey="ID", OtherKey="ConsultantID")]
		public EntitySet<Prospect> Prospects
		{
			get
			{
				return this._Prospects;
			}
			set
			{
				this._Prospects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ProspectFollowUp", Storage="_ProspectFollowUps", ThisKey="ID", OtherKey="ConsultantID")]
		public EntitySet<ProspectFollowUp> ProspectFollowUps
		{
			get
			{
				return this._ProspectFollowUps;
			}
			set
			{
				this._ProspectFollowUps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Employee", Storage="_Branch", ThisKey="HomeBranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._HomeBranchID = value.ID;
					}
					else
					{
						this._HomeBranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChangeStatusDocuments(ChangeStatusDocument entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_ChangeStatusDocuments(ChangeStatusDocument entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_CheckInLogs(CheckInLog entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_CheckInLogs(CheckInLog entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Prospects(Prospect entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Prospects(Prospect entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_ProspectFollowUps(ProspectFollowUp entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_ProspectFollowUps(ProspectFollowUp entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceAccrualHeader")]
	public partial class InvoiceAccrualHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InvoiceID;
		
		private string _InvoiceNo;
		
		private System.DateTime _AccrualDate;
		
		private decimal _TotalAmount;
		
		private int _TotalAccrualPeriod;
		
		private decimal _AccrualAmount;
		
		private int _SumAccrualPeriod;
		
		private decimal _SumAccrualAmount;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private EntitySet<InvoiceAccrualDetail> _InvoiceAccrualDetails;
		
		private EntitySet<PaymentAccrualHeader> _PaymentAccrualHeaders;
		
		private EntityRef<InvoiceHeader> _InvoiceHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnAccrualDateChanging(System.DateTime value);
    partial void OnAccrualDateChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnTotalAccrualPeriodChanging(int value);
    partial void OnTotalAccrualPeriodChanged();
    partial void OnAccrualAmountChanging(decimal value);
    partial void OnAccrualAmountChanged();
    partial void OnSumAccrualPeriodChanging(int value);
    partial void OnSumAccrualPeriodChanged();
    partial void OnSumAccrualAmountChanging(decimal value);
    partial void OnSumAccrualAmountChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    #endregion
		
		public InvoiceAccrualHeader()
		{
			this._InvoiceAccrualDetails = new EntitySet<InvoiceAccrualDetail>(new Action<InvoiceAccrualDetail>(this.attach_InvoiceAccrualDetails), new Action<InvoiceAccrualDetail>(this.detach_InvoiceAccrualDetails));
			this._PaymentAccrualHeaders = new EntitySet<PaymentAccrualHeader>(new Action<PaymentAccrualHeader>(this.attach_PaymentAccrualHeaders), new Action<PaymentAccrualHeader>(this.detach_PaymentAccrualHeaders));
			this._InvoiceHeader = default(EntityRef<InvoiceHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL")]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccrualDate", DbType="DateTime NOT NULL")]
		public System.DateTime AccrualDate
		{
			get
			{
				return this._AccrualDate;
			}
			set
			{
				if ((this._AccrualDate != value))
				{
					this.OnAccrualDateChanging(value);
					this.SendPropertyChanging();
					this._AccrualDate = value;
					this.SendPropertyChanged("AccrualDate");
					this.OnAccrualDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(20,2) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAccrualPeriod", DbType="Int NOT NULL")]
		public int TotalAccrualPeriod
		{
			get
			{
				return this._TotalAccrualPeriod;
			}
			set
			{
				if ((this._TotalAccrualPeriod != value))
				{
					this.OnTotalAccrualPeriodChanging(value);
					this.SendPropertyChanging();
					this._TotalAccrualPeriod = value;
					this.SendPropertyChanged("TotalAccrualPeriod");
					this.OnTotalAccrualPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccrualAmount", DbType="Decimal(20,2) NOT NULL")]
		public decimal AccrualAmount
		{
			get
			{
				return this._AccrualAmount;
			}
			set
			{
				if ((this._AccrualAmount != value))
				{
					this.OnAccrualAmountChanging(value);
					this.SendPropertyChanging();
					this._AccrualAmount = value;
					this.SendPropertyChanged("AccrualAmount");
					this.OnAccrualAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumAccrualPeriod", DbType="Int NOT NULL")]
		public int SumAccrualPeriod
		{
			get
			{
				return this._SumAccrualPeriod;
			}
			set
			{
				if ((this._SumAccrualPeriod != value))
				{
					this.OnSumAccrualPeriodChanging(value);
					this.SendPropertyChanging();
					this._SumAccrualPeriod = value;
					this.SendPropertyChanged("SumAccrualPeriod");
					this.OnSumAccrualPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumAccrualAmount", DbType="Decimal(20,2) NOT NULL")]
		public decimal SumAccrualAmount
		{
			get
			{
				return this._SumAccrualAmount;
			}
			set
			{
				if ((this._SumAccrualAmount != value))
				{
					this.OnSumAccrualAmountChanging(value);
					this.SendPropertyChanging();
					this._SumAccrualAmount = value;
					this.SendPropertyChanged("SumAccrualAmount");
					this.OnSumAccrualAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAccrualHeader_InvoiceAccrualDetail", Storage="_InvoiceAccrualDetails", ThisKey="ID", OtherKey="InvoiceAccrualID")]
		public EntitySet<InvoiceAccrualDetail> InvoiceAccrualDetails
		{
			get
			{
				return this._InvoiceAccrualDetails;
			}
			set
			{
				this._InvoiceAccrualDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAccrualHeader_PaymentAccrualHeader", Storage="_PaymentAccrualHeaders", ThisKey="ID", OtherKey="InvoiceAccrualID")]
		public EntitySet<PaymentAccrualHeader> PaymentAccrualHeaders
		{
			get
			{
				return this._PaymentAccrualHeaders;
			}
			set
			{
				this._PaymentAccrualHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceHeader_InvoiceAccrualHeader", Storage="_InvoiceHeader", ThisKey="InvoiceID", OtherKey="ID", IsForeignKey=true)]
		public InvoiceHeader InvoiceHeader
		{
			get
			{
				return this._InvoiceHeader.Entity;
			}
			set
			{
				InvoiceHeader previousValue = this._InvoiceHeader.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceHeader.Entity = null;
						previousValue.InvoiceAccrualHeaders.Remove(this);
					}
					this._InvoiceHeader.Entity = value;
					if ((value != null))
					{
						value.InvoiceAccrualHeaders.Add(this);
						this._InvoiceID = value.ID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceAccrualDetails(InvoiceAccrualDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAccrualHeader = this;
		}
		
		private void detach_InvoiceAccrualDetails(InvoiceAccrualDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAccrualHeader = null;
		}
		
		private void attach_PaymentAccrualHeaders(PaymentAccrualHeader entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAccrualHeader = this;
		}
		
		private void detach_PaymentAccrualHeaders(PaymentAccrualHeader entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAccrualHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceAccrualDetail")]
	public partial class InvoiceAccrualDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InvoiceAccrualID;
		
		private int _ItemID;
		
		private int _Quantity;
		
		private decimal _UnitPrice;
		
		private decimal _Discount;
		
		private bool _IsTaxable;
		
		private EntityRef<InvoiceAccrualHeader> _InvoiceAccrualHeader;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInvoiceAccrualIDChanging(int value);
    partial void OnInvoiceAccrualIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnIsTaxableChanging(bool value);
    partial void OnIsTaxableChanged();
    #endregion
		
		public InvoiceAccrualDetail()
		{
			this._InvoiceAccrualHeader = default(EntityRef<InvoiceAccrualHeader>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAccrualID", DbType="Int NOT NULL")]
		public int InvoiceAccrualID
		{
			get
			{
				return this._InvoiceAccrualID;
			}
			set
			{
				if ((this._InvoiceAccrualID != value))
				{
					if (this._InvoiceAccrualHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceAccrualIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAccrualID = value;
					this.SendPropertyChanged("InvoiceAccrualID");
					this.OnInvoiceAccrualIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(20,2) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(5,2) NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTaxable", DbType="Bit NOT NULL")]
		public bool IsTaxable
		{
			get
			{
				return this._IsTaxable;
			}
			set
			{
				if ((this._IsTaxable != value))
				{
					this.OnIsTaxableChanging(value);
					this.SendPropertyChanging();
					this._IsTaxable = value;
					this.SendPropertyChanged("IsTaxable");
					this.OnIsTaxableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAccrualHeader_InvoiceAccrualDetail", Storage="_InvoiceAccrualHeader", ThisKey="InvoiceAccrualID", OtherKey="ID", IsForeignKey=true)]
		public InvoiceAccrualHeader InvoiceAccrualHeader
		{
			get
			{
				return this._InvoiceAccrualHeader.Entity;
			}
			set
			{
				InvoiceAccrualHeader previousValue = this._InvoiceAccrualHeader.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAccrualHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAccrualHeader.Entity = null;
						previousValue.InvoiceAccrualDetails.Remove(this);
					}
					this._InvoiceAccrualHeader.Entity = value;
					if ((value != null))
					{
						value.InvoiceAccrualDetails.Add(this);
						this._InvoiceAccrualID = value.ID;
					}
					else
					{
						this._InvoiceAccrualID = default(int);
					}
					this.SendPropertyChanged("InvoiceAccrualHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_InvoiceAccrualDetail", Storage="_Item", ThisKey="ItemID", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.InvoiceAccrualDetails.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.InvoiceAccrualDetails.Add(this);
						this._ItemID = value.ID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ContractNo;
		
		private string _ContractType;
		
		private string _PreprintNo;
		
		private System.DateTime _Date;
		
		private int _CustomerID;
		
		private int _BranchID;
		
		private int _PackageID;
		
		private int _DuesInMonth;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private System.DateTime _EffectiveDate;
		
		private System.DateTime _ExpiredDate;
		
		private System.Nullable<System.DateTime> _ActiveDate;
		
		private int _BillingTypeID;
		
		private string _Status;
		
		private System.Nullable<int> _BillingItemID;
		
		private decimal _DuesAmount;
		
		private System.Nullable<System.DateTime> _NextDuesDate;
		
		private System.Nullable<System.DateTime> _VoidDate;
		
		private System.Nullable<System.DateTime> _ClosedDate;
		
		private string _Notes;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<BillingDetail> _BillingDetails;
		
		private EntitySet<InvoiceHeader> _InvoiceHeaders;
		
		private EntityRef<BillingType> _BillingType;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<PackageHeader> _PackageHeader;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnContractTypeChanging(string value);
    partial void OnContractTypeChanged();
    partial void OnPreprintNoChanging(string value);
    partial void OnPreprintNoChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnDuesInMonthChanging(int value);
    partial void OnDuesInMonthChanged();
    partial void OnPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseDateChanged();
    partial void OnEffectiveDateChanging(System.DateTime value);
    partial void OnEffectiveDateChanged();
    partial void OnExpiredDateChanging(System.DateTime value);
    partial void OnExpiredDateChanged();
    partial void OnActiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActiveDateChanged();
    partial void OnBillingTypeIDChanging(int value);
    partial void OnBillingTypeIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnBillingItemIDChanging(System.Nullable<int> value);
    partial void OnBillingItemIDChanged();
    partial void OnDuesAmountChanging(decimal value);
    partial void OnDuesAmountChanged();
    partial void OnNextDuesDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextDuesDateChanged();
    partial void OnVoidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVoidDateChanged();
    partial void OnClosedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Contract()
		{
			this._BillingDetails = new EntitySet<BillingDetail>(new Action<BillingDetail>(this.attach_BillingDetails), new Action<BillingDetail>(this.detach_BillingDetails));
			this._InvoiceHeaders = new EntitySet<InvoiceHeader>(new Action<InvoiceHeader>(this.attach_InvoiceHeaders), new Action<InvoiceHeader>(this.detach_InvoiceHeaders));
			this._BillingType = default(EntityRef<BillingType>);
			this._Branch = default(EntityRef<Branch>);
			this._Item = default(EntityRef<Item>);
			this._PackageHeader = default(EntityRef<PackageHeader>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractType", DbType="VarChar(1)")]
		public string ContractType
		{
			get
			{
				return this._ContractType;
			}
			set
			{
				if ((this._ContractType != value))
				{
					this.OnContractTypeChanging(value);
					this.SendPropertyChanging();
					this._ContractType = value;
					this.SendPropertyChanged("ContractType");
					this.OnContractTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreprintNo", DbType="VarChar(30)")]
		public string PreprintNo
		{
			get
			{
				return this._PreprintNo;
			}
			set
			{
				if ((this._PreprintNo != value))
				{
					this.OnPreprintNoChanging(value);
					this.SendPropertyChanging();
					this._PreprintNo = value;
					this.SendPropertyChanged("PreprintNo");
					this.OnPreprintNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._PackageHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuesInMonth", DbType="Int NOT NULL")]
		public int DuesInMonth
		{
			get
			{
				return this._DuesInMonth;
			}
			set
			{
				if ((this._DuesInMonth != value))
				{
					this.OnDuesInMonthChanging(value);
					this.SendPropertyChanging();
					this._DuesInMonth = value;
					this.SendPropertyChanged("DuesInMonth");
					this.OnDuesInMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime NOT NULL")]
		public System.DateTime EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpiredDate
		{
			get
			{
				return this._ExpiredDate;
			}
			set
			{
				if ((this._ExpiredDate != value))
				{
					this.OnExpiredDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiredDate = value;
					this.SendPropertyChanged("ExpiredDate");
					this.OnExpiredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActiveDate
		{
			get
			{
				return this._ActiveDate;
			}
			set
			{
				if ((this._ActiveDate != value))
				{
					this.OnActiveDateChanging(value);
					this.SendPropertyChanging();
					this._ActiveDate = value;
					this.SendPropertyChanged("ActiveDate");
					this.OnActiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingTypeID", DbType="Int NOT NULL")]
		public int BillingTypeID
		{
			get
			{
				return this._BillingTypeID;
			}
			set
			{
				if ((this._BillingTypeID != value))
				{
					if (this._BillingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BillingTypeID = value;
					this.SendPropertyChanged("BillingTypeID");
					this.OnBillingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingItemID", DbType="Int")]
		public System.Nullable<int> BillingItemID
		{
			get
			{
				return this._BillingItemID;
			}
			set
			{
				if ((this._BillingItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillingItemIDChanging(value);
					this.SendPropertyChanging();
					this._BillingItemID = value;
					this.SendPropertyChanged("BillingItemID");
					this.OnBillingItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuesAmount", DbType="Decimal(20,2) NOT NULL")]
		public decimal DuesAmount
		{
			get
			{
				return this._DuesAmount;
			}
			set
			{
				if ((this._DuesAmount != value))
				{
					this.OnDuesAmountChanging(value);
					this.SendPropertyChanging();
					this._DuesAmount = value;
					this.SendPropertyChanged("DuesAmount");
					this.OnDuesAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextDuesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextDuesDate
		{
			get
			{
				return this._NextDuesDate;
			}
			set
			{
				if ((this._NextDuesDate != value))
				{
					this.OnNextDuesDateChanging(value);
					this.SendPropertyChanging();
					this._NextDuesDate = value;
					this.SendPropertyChanged("NextDuesDate");
					this.OnNextDuesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VoidDate
		{
			get
			{
				return this._VoidDate;
			}
			set
			{
				if ((this._VoidDate != value))
				{
					this.OnVoidDateChanging(value);
					this.SendPropertyChanging();
					this._VoidDate = value;
					this.SendPropertyChanged("VoidDate");
					this.OnVoidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosedDate
		{
			get
			{
				return this._ClosedDate;
			}
			set
			{
				if ((this._ClosedDate != value))
				{
					this.OnClosedDateChanging(value);
					this.SendPropertyChanging();
					this._ClosedDate = value;
					this.SendPropertyChanged("ClosedDate");
					this.OnClosedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(2000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_BillingDetail", Storage="_BillingDetails", ThisKey="ID", OtherKey="ContractID")]
		public EntitySet<BillingDetail> BillingDetails
		{
			get
			{
				return this._BillingDetails;
			}
			set
			{
				this._BillingDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_InvoiceHeader", Storage="_InvoiceHeaders", ThisKey="ID", OtherKey="ContractID")]
		public EntitySet<InvoiceHeader> InvoiceHeaders
		{
			get
			{
				return this._InvoiceHeaders;
			}
			set
			{
				this._InvoiceHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingType_Contract", Storage="_BillingType", ThisKey="BillingTypeID", OtherKey="ID", IsForeignKey=true)]
		public BillingType BillingType
		{
			get
			{
				return this._BillingType.Entity;
			}
			set
			{
				BillingType previousValue = this._BillingType.Entity;
				if (((previousValue != value) 
							|| (this._BillingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillingType.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._BillingType.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._BillingTypeID = value.ID;
					}
					else
					{
						this._BillingTypeID = default(int);
					}
					this.SendPropertyChanged("BillingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Contract", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Contract", Storage="_Item", ThisKey="BillingItemID", OtherKey="ID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._BillingItemID = value.ID;
					}
					else
					{
						this._BillingItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackageHeader_Contract", Storage="_PackageHeader", ThisKey="PackageID", OtherKey="ID", IsForeignKey=true)]
		public PackageHeader PackageHeader
		{
			get
			{
				return this._PackageHeader.Entity;
			}
			set
			{
				PackageHeader previousValue = this._PackageHeader.Entity;
				if (((previousValue != value) 
							|| (this._PackageHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackageHeader.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._PackageHeader.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._PackageID = value.ID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("PackageHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Contract", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Contracts.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Contracts.Add(this);
						this._CustomerID = value.ID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillingDetails(BillingDetail entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_BillingDetails(BillingDetail entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
		
		private void attach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentAccrualDetail")]
	public partial class PaymentAccrualDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PaymentAccrualID;
		
		private System.Nullable<int> _CreditCardTypeID;
		
		private decimal _Amount;
		
		private int _PaymentTypeID;
		
		private string _ApprovalCode;
		
		private string _Notes;
		
		private EntityRef<CreditCardType> _CreditCardType;
		
		private EntityRef<PaymentType> _PaymentType;
		
		private EntityRef<PaymentAccrualHeader> _PaymentAccrualHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPaymentAccrualIDChanging(int value);
    partial void OnPaymentAccrualIDChanged();
    partial void OnCreditCardTypeIDChanging(System.Nullable<int> value);
    partial void OnCreditCardTypeIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPaymentTypeIDChanging(int value);
    partial void OnPaymentTypeIDChanged();
    partial void OnApprovalCodeChanging(string value);
    partial void OnApprovalCodeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public PaymentAccrualDetail()
		{
			this._CreditCardType = default(EntityRef<CreditCardType>);
			this._PaymentType = default(EntityRef<PaymentType>);
			this._PaymentAccrualHeader = default(EntityRef<PaymentAccrualHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAccrualID", DbType="Int NOT NULL")]
		public int PaymentAccrualID
		{
			get
			{
				return this._PaymentAccrualID;
			}
			set
			{
				if ((this._PaymentAccrualID != value))
				{
					if (this._PaymentAccrualHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentAccrualIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentAccrualID = value;
					this.SendPropertyChanged("PaymentAccrualID");
					this.OnPaymentAccrualIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardTypeID", DbType="Int")]
		public System.Nullable<int> CreditCardTypeID
		{
			get
			{
				return this._CreditCardTypeID;
			}
			set
			{
				if ((this._CreditCardTypeID != value))
				{
					if (this._CreditCardType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreditCardTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CreditCardTypeID = value;
					this.SendPropertyChanged("CreditCardTypeID");
					this.OnCreditCardTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(20,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeID", DbType="Int NOT NULL")]
		public int PaymentTypeID
		{
			get
			{
				return this._PaymentTypeID;
			}
			set
			{
				if ((this._PaymentTypeID != value))
				{
					if (this._PaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeID = value;
					this.SendPropertyChanged("PaymentTypeID");
					this.OnPaymentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalCode", DbType="VarChar(30)")]
		public string ApprovalCode
		{
			get
			{
				return this._ApprovalCode;
			}
			set
			{
				if ((this._ApprovalCode != value))
				{
					this.OnApprovalCodeChanging(value);
					this.SendPropertyChanging();
					this._ApprovalCode = value;
					this.SendPropertyChanged("ApprovalCode");
					this.OnApprovalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCardType_PaymentAccrualDetail", Storage="_CreditCardType", ThisKey="CreditCardTypeID", OtherKey="ID", IsForeignKey=true)]
		public CreditCardType CreditCardType
		{
			get
			{
				return this._CreditCardType.Entity;
			}
			set
			{
				CreditCardType previousValue = this._CreditCardType.Entity;
				if (((previousValue != value) 
							|| (this._CreditCardType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditCardType.Entity = null;
						previousValue.PaymentAccrualDetails.Remove(this);
					}
					this._CreditCardType.Entity = value;
					if ((value != null))
					{
						value.PaymentAccrualDetails.Add(this);
						this._CreditCardTypeID = value.ID;
					}
					else
					{
						this._CreditCardTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CreditCardType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_PaymentAccrualDetail", Storage="_PaymentType", ThisKey="PaymentTypeID", OtherKey="ID", IsForeignKey=true)]
		public PaymentType PaymentType
		{
			get
			{
				return this._PaymentType.Entity;
			}
			set
			{
				PaymentType previousValue = this._PaymentType.Entity;
				if (((previousValue != value) 
							|| (this._PaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentType.Entity = null;
						previousValue.PaymentAccrualDetails.Remove(this);
					}
					this._PaymentType.Entity = value;
					if ((value != null))
					{
						value.PaymentAccrualDetails.Add(this);
						this._PaymentTypeID = value.ID;
					}
					else
					{
						this._PaymentTypeID = default(int);
					}
					this.SendPropertyChanged("PaymentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentAccrualHeader_PaymentAccrualDetail", Storage="_PaymentAccrualHeader", ThisKey="PaymentAccrualID", OtherKey="ID", IsForeignKey=true)]
		public PaymentAccrualHeader PaymentAccrualHeader
		{
			get
			{
				return this._PaymentAccrualHeader.Entity;
			}
			set
			{
				PaymentAccrualHeader previousValue = this._PaymentAccrualHeader.Entity;
				if (((previousValue != value) 
							|| (this._PaymentAccrualHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentAccrualHeader.Entity = null;
						previousValue.PaymentAccrualDetails.Remove(this);
					}
					this._PaymentAccrualHeader.Entity = value;
					if ((value != null))
					{
						value.PaymentAccrualDetails.Add(this);
						this._PaymentAccrualID = value.ID;
					}
					else
					{
						this._PaymentAccrualID = default(int);
					}
					this.SendPropertyChanged("PaymentAccrualHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentAccrualHeader")]
	public partial class PaymentAccrualHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PaymentNo;
		
		private System.DateTime _Date;
		
		private int _InvoiceAccrualID;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private EntitySet<PaymentAccrualDetail> _PaymentAccrualDetails;
		
		private EntityRef<InvoiceAccrualHeader> _InvoiceAccrualHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPaymentNoChanging(string value);
    partial void OnPaymentNoChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnInvoiceAccrualIDChanging(int value);
    partial void OnInvoiceAccrualIDChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    #endregion
		
		public PaymentAccrualHeader()
		{
			this._PaymentAccrualDetails = new EntitySet<PaymentAccrualDetail>(new Action<PaymentAccrualDetail>(this.attach_PaymentAccrualDetails), new Action<PaymentAccrualDetail>(this.detach_PaymentAccrualDetails));
			this._InvoiceAccrualHeader = default(EntityRef<InvoiceAccrualHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNo", DbType="VarChar(20)")]
		public string PaymentNo
		{
			get
			{
				return this._PaymentNo;
			}
			set
			{
				if ((this._PaymentNo != value))
				{
					this.OnPaymentNoChanging(value);
					this.SendPropertyChanging();
					this._PaymentNo = value;
					this.SendPropertyChanged("PaymentNo");
					this.OnPaymentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAccrualID", DbType="Int NOT NULL")]
		public int InvoiceAccrualID
		{
			get
			{
				return this._InvoiceAccrualID;
			}
			set
			{
				if ((this._InvoiceAccrualID != value))
				{
					if (this._InvoiceAccrualHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceAccrualIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAccrualID = value;
					this.SendPropertyChanged("InvoiceAccrualID");
					this.OnInvoiceAccrualIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentAccrualHeader_PaymentAccrualDetail", Storage="_PaymentAccrualDetails", ThisKey="ID", OtherKey="PaymentAccrualID")]
		public EntitySet<PaymentAccrualDetail> PaymentAccrualDetails
		{
			get
			{
				return this._PaymentAccrualDetails;
			}
			set
			{
				this._PaymentAccrualDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAccrualHeader_PaymentAccrualHeader", Storage="_InvoiceAccrualHeader", ThisKey="InvoiceAccrualID", OtherKey="ID", IsForeignKey=true)]
		public InvoiceAccrualHeader InvoiceAccrualHeader
		{
			get
			{
				return this._InvoiceAccrualHeader.Entity;
			}
			set
			{
				InvoiceAccrualHeader previousValue = this._InvoiceAccrualHeader.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAccrualHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAccrualHeader.Entity = null;
						previousValue.PaymentAccrualHeaders.Remove(this);
					}
					this._InvoiceAccrualHeader.Entity = value;
					if ((value != null))
					{
						value.PaymentAccrualHeaders.Add(this);
						this._InvoiceAccrualID = value.ID;
					}
					else
					{
						this._InvoiceAccrualID = default(int);
					}
					this.SendPropertyChanged("InvoiceAccrualHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentAccrualDetails(PaymentAccrualDetail entity)
		{
			this.SendPropertyChanging();
			entity.PaymentAccrualHeader = this;
		}
		
		private void detach_PaymentAccrualDetails(PaymentAccrualDetail entity)
		{
			this.SendPropertyChanging();
			entity.PaymentAccrualHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassRunning")]
	public partial class ClassRunning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BranchID;
		
		private int _ClassScheduleID;
		
		private System.Nullable<int> _RunningInstructorID;
		
		private System.Nullable<int> _RunningAssistantID;
		
		private string _Notes;
		
		private System.DateTime _RunningDate;
		
		private System.Nullable<System.DateTime> _RunningStartWhen;
		
		private System.Nullable<System.DateTime> _RunningEndWhen;
		
		private EntitySet<ClassAttendance> _ClassAttendances;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<ClassScheduleDetail> _ClassScheduleDetail;
		
		private EntityRef<Instructor> _Instructor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnClassScheduleIDChanging(int value);
    partial void OnClassScheduleIDChanged();
    partial void OnRunningInstructorIDChanging(System.Nullable<int> value);
    partial void OnRunningInstructorIDChanged();
    partial void OnRunningAssistantIDChanging(System.Nullable<int> value);
    partial void OnRunningAssistantIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRunningDateChanging(System.DateTime value);
    partial void OnRunningDateChanged();
    partial void OnRunningStartWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnRunningStartWhenChanged();
    partial void OnRunningEndWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnRunningEndWhenChanged();
    #endregion
		
		public ClassRunning()
		{
			this._ClassAttendances = new EntitySet<ClassAttendance>(new Action<ClassAttendance>(this.attach_ClassAttendances), new Action<ClassAttendance>(this.detach_ClassAttendances));
			this._Branch = default(EntityRef<Branch>);
			this._ClassScheduleDetail = default(EntityRef<ClassScheduleDetail>);
			this._Instructor = default(EntityRef<Instructor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassScheduleID", DbType="Int NOT NULL")]
		public int ClassScheduleID
		{
			get
			{
				return this._ClassScheduleID;
			}
			set
			{
				if ((this._ClassScheduleID != value))
				{
					if (this._ClassScheduleDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ClassScheduleID = value;
					this.SendPropertyChanged("ClassScheduleID");
					this.OnClassScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningInstructorID", DbType="Int")]
		public System.Nullable<int> RunningInstructorID
		{
			get
			{
				return this._RunningInstructorID;
			}
			set
			{
				if ((this._RunningInstructorID != value))
				{
					if (this._Instructor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRunningInstructorIDChanging(value);
					this.SendPropertyChanging();
					this._RunningInstructorID = value;
					this.SendPropertyChanged("RunningInstructorID");
					this.OnRunningInstructorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningAssistantID", DbType="Int")]
		public System.Nullable<int> RunningAssistantID
		{
			get
			{
				return this._RunningAssistantID;
			}
			set
			{
				if ((this._RunningAssistantID != value))
				{
					this.OnRunningAssistantIDChanging(value);
					this.SendPropertyChanging();
					this._RunningAssistantID = value;
					this.SendPropertyChanged("RunningAssistantID");
					this.OnRunningAssistantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(2000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningDate", DbType="DateTime NOT NULL")]
		public System.DateTime RunningDate
		{
			get
			{
				return this._RunningDate;
			}
			set
			{
				if ((this._RunningDate != value))
				{
					this.OnRunningDateChanging(value);
					this.SendPropertyChanging();
					this._RunningDate = value;
					this.SendPropertyChanged("RunningDate");
					this.OnRunningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningStartWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> RunningStartWhen
		{
			get
			{
				return this._RunningStartWhen;
			}
			set
			{
				if ((this._RunningStartWhen != value))
				{
					this.OnRunningStartWhenChanging(value);
					this.SendPropertyChanging();
					this._RunningStartWhen = value;
					this.SendPropertyChanged("RunningStartWhen");
					this.OnRunningStartWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningEndWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> RunningEndWhen
		{
			get
			{
				return this._RunningEndWhen;
			}
			set
			{
				if ((this._RunningEndWhen != value))
				{
					this.OnRunningEndWhenChanging(value);
					this.SendPropertyChanging();
					this._RunningEndWhen = value;
					this.SendPropertyChanged("RunningEndWhen");
					this.OnRunningEndWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassRunning_ClassAttendance", Storage="_ClassAttendances", ThisKey="ID", OtherKey="ClassRunningID")]
		public EntitySet<ClassAttendance> ClassAttendances
		{
			get
			{
				return this._ClassAttendances;
			}
			set
			{
				this._ClassAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ClassRunning", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.ClassRunnings.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.ClassRunnings.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassScheduleDetail_ClassRunning", Storage="_ClassScheduleDetail", ThisKey="ClassScheduleID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ClassScheduleDetail ClassScheduleDetail
		{
			get
			{
				return this._ClassScheduleDetail.Entity;
			}
			set
			{
				ClassScheduleDetail previousValue = this._ClassScheduleDetail.Entity;
				if (((previousValue != value) 
							|| (this._ClassScheduleDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassScheduleDetail.Entity = null;
						previousValue.ClassRunnings.Remove(this);
					}
					this._ClassScheduleDetail.Entity = value;
					if ((value != null))
					{
						value.ClassRunnings.Add(this);
						this._ClassScheduleID = value.ID;
					}
					else
					{
						this._ClassScheduleID = default(int);
					}
					this.SendPropertyChanged("ClassScheduleDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instructor_ClassRunning", Storage="_Instructor", ThisKey="RunningInstructorID", OtherKey="ID", IsForeignKey=true)]
		public Instructor Instructor
		{
			get
			{
				return this._Instructor.Entity;
			}
			set
			{
				Instructor previousValue = this._Instructor.Entity;
				if (((previousValue != value) 
							|| (this._Instructor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Instructor.Entity = null;
						previousValue.ClassRunnings.Remove(this);
					}
					this._Instructor.Entity = value;
					if ((value != null))
					{
						value.ClassRunnings.Add(this);
						this._RunningInstructorID = value.ID;
					}
					else
					{
						this._RunningInstructorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Instructor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClassAttendances(ClassAttendance entity)
		{
			this.SendPropertyChanging();
			entity.ClassRunning = this;
		}
		
		private void detach_ClassAttendances(ClassAttendance entity)
		{
			this.SendPropertyChanging();
			entity.ClassRunning = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prospect")]
	public partial class Prospect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BranchID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.DateTime _Date;
		
		private string _IdentityNo;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private System.Nullable<int> _ConsultantID;
		
		private string _Photo;
		
		private string _ProspectSource;
		
		private string _ProspectRef;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _FreeTrialValidFrom;
		
		private System.Nullable<System.DateTime> _FreeTrialValidTo;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<ProspectFollowUp> _ProspectFollowUps;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnIdentityNoChanging(string value);
    partial void OnIdentityNoChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnConsultantIDChanging(System.Nullable<int> value);
    partial void OnConsultantIDChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnProspectSourceChanging(string value);
    partial void OnProspectSourceChanged();
    partial void OnProspectRefChanging(string value);
    partial void OnProspectRefChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnFreeTrialValidFromChanging(System.Nullable<System.DateTime> value);
    partial void OnFreeTrialValidFromChanged();
    partial void OnFreeTrialValidToChanging(System.Nullable<System.DateTime> value);
    partial void OnFreeTrialValidToChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public Prospect()
		{
			this._ProspectFollowUps = new EntitySet<ProspectFollowUp>(new Action<ProspectFollowUp>(this.attach_ProspectFollowUps), new Action<ProspectFollowUp>(this.detach_ProspectFollowUps));
			this._Branch = default(EntityRef<Branch>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int NOT NULL")]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNo", DbType="VarChar(20)")]
		public string IdentityNo
		{
			get
			{
				return this._IdentityNo;
			}
			set
			{
				if ((this._IdentityNo != value))
				{
					this.OnIdentityNoChanging(value);
					this.SendPropertyChanging();
					this._IdentityNo = value;
					this.SendPropertyChanged("IdentityNo");
					this.OnIdentityNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="VarChar(20)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="VarChar(20)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(20)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsultantID", DbType="Int")]
		public System.Nullable<int> ConsultantID
		{
			get
			{
				return this._ConsultantID;
			}
			set
			{
				if ((this._ConsultantID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConsultantIDChanging(value);
					this.SendPropertyChanging();
					this._ConsultantID = value;
					this.SendPropertyChanged("ConsultantID");
					this.OnConsultantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarChar(50)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectSource", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ProspectSource
		{
			get
			{
				return this._ProspectSource;
			}
			set
			{
				if ((this._ProspectSource != value))
				{
					this.OnProspectSourceChanging(value);
					this.SendPropertyChanging();
					this._ProspectSource = value;
					this.SendPropertyChanged("ProspectSource");
					this.OnProspectSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectRef", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProspectRef
		{
			get
			{
				return this._ProspectRef;
			}
			set
			{
				if ((this._ProspectRef != value))
				{
					this.OnProspectRefChanging(value);
					this.SendPropertyChanging();
					this._ProspectRef = value;
					this.SendPropertyChanged("ProspectRef");
					this.OnProspectRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(2000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeTrialValidFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> FreeTrialValidFrom
		{
			get
			{
				return this._FreeTrialValidFrom;
			}
			set
			{
				if ((this._FreeTrialValidFrom != value))
				{
					this.OnFreeTrialValidFromChanging(value);
					this.SendPropertyChanging();
					this._FreeTrialValidFrom = value;
					this.SendPropertyChanged("FreeTrialValidFrom");
					this.OnFreeTrialValidFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeTrialValidTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> FreeTrialValidTo
		{
			get
			{
				return this._FreeTrialValidTo;
			}
			set
			{
				if ((this._FreeTrialValidTo != value))
				{
					this.OnFreeTrialValidToChanging(value);
					this.SendPropertyChanging();
					this._FreeTrialValidTo = value;
					this.SendPropertyChanged("FreeTrialValidTo");
					this.OnFreeTrialValidToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prospect_ProspectFollowUp", Storage="_ProspectFollowUps", ThisKey="ID", OtherKey="ProspectID")]
		public EntitySet<ProspectFollowUp> ProspectFollowUps
		{
			get
			{
				return this._ProspectFollowUps;
			}
			set
			{
				this._ProspectFollowUps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Prospect", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Prospects.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Prospects.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Prospect", Storage="_Employee", ThisKey="ConsultantID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Prospects.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Prospects.Add(this);
						this._ConsultantID = value.ID;
					}
					else
					{
						this._ConsultantID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProspectFollowUps(ProspectFollowUp entity)
		{
			this.SendPropertyChanging();
			entity.Prospect = this;
		}
		
		private void detach_ProspectFollowUps(ProspectFollowUp entity)
		{
			this.SendPropertyChanging();
			entity.Prospect = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProspectFollowUp")]
	public partial class ProspectFollowUp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ProspectID;
		
		private int _ConsultantID;
		
		private System.DateTime _Date;
		
		private string _FollowUpVia;
		
		private string _Result;
		
		private string _Outcome;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Prospect> _Prospect;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProspectIDChanging(int value);
    partial void OnProspectIDChanged();
    partial void OnConsultantIDChanging(int value);
    partial void OnConsultantIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnFollowUpViaChanging(string value);
    partial void OnFollowUpViaChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnOutcomeChanging(string value);
    partial void OnOutcomeChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public ProspectFollowUp()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Prospect = default(EntityRef<Prospect>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProspectID", DbType="Int NOT NULL")]
		public int ProspectID
		{
			get
			{
				return this._ProspectID;
			}
			set
			{
				if ((this._ProspectID != value))
				{
					if (this._Prospect.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProspectIDChanging(value);
					this.SendPropertyChanging();
					this._ProspectID = value;
					this.SendPropertyChanged("ProspectID");
					this.OnProspectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsultantID", DbType="Int NOT NULL")]
		public int ConsultantID
		{
			get
			{
				return this._ConsultantID;
			}
			set
			{
				if ((this._ConsultantID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConsultantIDChanging(value);
					this.SendPropertyChanging();
					this._ConsultantID = value;
					this.SendPropertyChanged("ConsultantID");
					this.OnConsultantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpVia", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FollowUpVia
		{
			get
			{
				return this._FollowUpVia;
			}
			set
			{
				if ((this._FollowUpVia != value))
				{
					this.OnFollowUpViaChanging(value);
					this.SendPropertyChanging();
					this._FollowUpVia = value;
					this.SendPropertyChanged("FollowUpVia");
					this.OnFollowUpViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(2000)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outcome", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Outcome
		{
			get
			{
				return this._Outcome;
			}
			set
			{
				if ((this._Outcome != value))
				{
					this.OnOutcomeChanging(value);
					this.SendPropertyChanging();
					this._Outcome = value;
					this.SendPropertyChanged("Outcome");
					this.OnOutcomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ProspectFollowUp", Storage="_Employee", ThisKey="ConsultantID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.ProspectFollowUps.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.ProspectFollowUps.Add(this);
						this._ConsultantID = value.ID;
					}
					else
					{
						this._ConsultantID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prospect_ProspectFollowUp", Storage="_Prospect", ThisKey="ProspectID", OtherKey="ID", IsForeignKey=true)]
		public Prospect Prospect
		{
			get
			{
				return this._Prospect.Entity;
			}
			set
			{
				Prospect previousValue = this._Prospect.Entity;
				if (((previousValue != value) 
							|| (this._Prospect.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prospect.Entity = null;
						previousValue.ProspectFollowUps.Remove(this);
					}
					this._Prospect.Entity = value;
					if ((value != null))
					{
						value.ProspectFollowUps.Add(this);
						this._ProspectID = value.ID;
					}
					else
					{
						this._ProspectID = default(int);
					}
					this.SendPropertyChanged("Prospect");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.School")]
	public partial class School : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    #endregion
		
		public School()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Customer", Storage="_Customers", ThisKey="ID", OtherKey="SchoolID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.School = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.School = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Barcode;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Surname;
		
		private string _IDCardNo;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _Address;
		
		private string _ZipCode;
		
		private string _MailingAddress;
		
		private string _MailingZipCode;
		
		private string _Email;
		
		private string _HomePhone;
		
		private string _CellPhone1;
		
		private string _CellPhone2;
		
		private System.Nullable<int> _HomeBranchID;
		
		private System.Nullable<int> _AreaID;
		
		private System.Nullable<int> _PartnerID;
		
		private string _CardNo;
		
		private string _CardHolderName;
		
		private string _CardHolderID;
		
		private System.Nullable<int> _BankID;
		
		private int _BillingTypeID;
		
		private System.Nullable<int> _CreditCardTypeID;
		
		private System.Nullable<System.DateTime> _ExpiredDate;
		
		private string _Photo;
		
		private System.DateTime _CreatedWhen;
		
		private string _CreatedWho;
		
		private System.DateTime _ChangedWhen;
		
		private string _ChangedWho;
		
		private System.Nullable<int> _SchoolID;
		
		private EntitySet<BillingDetail> _BillingDetails;
		
		private EntitySet<ChangeStatusDocument> _ChangeStatusDocuments;
		
		private EntitySet<CheckInLog> _CheckInLogs;
		
		private EntitySet<ClassAttendance> _ClassAttendances;
		
		private EntitySet<CustomerNote> _CustomerNotes;
		
		private EntitySet<CustomerStatusHistory> _CustomerStatusHistories;
		
		private EntitySet<InvoiceHeader> _InvoiceHeaders;
		
		private EntitySet<Person> _Persons;
		
		private EntitySet<CreditCardChangeHistory> _CreditCardChangeHistories;
		
		private EntitySet<Contract> _Contracts;
		
		private EntitySet<Customer> _Customers;
		
		private EntityRef<Area> _Area;
		
		private EntityRef<Bank> _Bank;
		
		private EntityRef<BillingType> _BillingType;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<CreditCardType> _CreditCardType;
		
		private EntityRef<Customer> _Customer1;
		
		private EntityRef<School> _School;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnIDCardNoChanging(string value);
    partial void OnIDCardNoChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnMailingAddressChanging(string value);
    partial void OnMailingAddressChanged();
    partial void OnMailingZipCodeChanging(string value);
    partial void OnMailingZipCodeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnCellPhone1Changing(string value);
    partial void OnCellPhone1Changed();
    partial void OnCellPhone2Changing(string value);
    partial void OnCellPhone2Changed();
    partial void OnHomeBranchIDChanging(System.Nullable<int> value);
    partial void OnHomeBranchIDChanged();
    partial void OnAreaIDChanging(System.Nullable<int> value);
    partial void OnAreaIDChanged();
    partial void OnPartnerIDChanging(System.Nullable<int> value);
    partial void OnPartnerIDChanged();
    partial void OnCardNoChanging(string value);
    partial void OnCardNoChanged();
    partial void OnCardHolderNameChanging(string value);
    partial void OnCardHolderNameChanged();
    partial void OnCardHolderIDChanging(string value);
    partial void OnCardHolderIDChanged();
    partial void OnBankIDChanging(System.Nullable<int> value);
    partial void OnBankIDChanged();
    partial void OnBillingTypeIDChanging(int value);
    partial void OnBillingTypeIDChanged();
    partial void OnCreditCardTypeIDChanging(System.Nullable<int> value);
    partial void OnCreditCardTypeIDChanged();
    partial void OnExpiredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiredDateChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnCreatedWhenChanging(System.DateTime value);
    partial void OnCreatedWhenChanged();
    partial void OnCreatedWhoChanging(string value);
    partial void OnCreatedWhoChanged();
    partial void OnChangedWhenChanging(System.DateTime value);
    partial void OnChangedWhenChanged();
    partial void OnChangedWhoChanging(string value);
    partial void OnChangedWhoChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    #endregion
		
		public Customer()
		{
			this._BillingDetails = new EntitySet<BillingDetail>(new Action<BillingDetail>(this.attach_BillingDetails), new Action<BillingDetail>(this.detach_BillingDetails));
			this._ChangeStatusDocuments = new EntitySet<ChangeStatusDocument>(new Action<ChangeStatusDocument>(this.attach_ChangeStatusDocuments), new Action<ChangeStatusDocument>(this.detach_ChangeStatusDocuments));
			this._CheckInLogs = new EntitySet<CheckInLog>(new Action<CheckInLog>(this.attach_CheckInLogs), new Action<CheckInLog>(this.detach_CheckInLogs));
			this._ClassAttendances = new EntitySet<ClassAttendance>(new Action<ClassAttendance>(this.attach_ClassAttendances), new Action<ClassAttendance>(this.detach_ClassAttendances));
			this._CustomerNotes = new EntitySet<CustomerNote>(new Action<CustomerNote>(this.attach_CustomerNotes), new Action<CustomerNote>(this.detach_CustomerNotes));
			this._CustomerStatusHistories = new EntitySet<CustomerStatusHistory>(new Action<CustomerStatusHistory>(this.attach_CustomerStatusHistories), new Action<CustomerStatusHistory>(this.detach_CustomerStatusHistories));
			this._InvoiceHeaders = new EntitySet<InvoiceHeader>(new Action<InvoiceHeader>(this.attach_InvoiceHeaders), new Action<InvoiceHeader>(this.detach_InvoiceHeaders));
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			this._CreditCardChangeHistories = new EntitySet<CreditCardChangeHistory>(new Action<CreditCardChangeHistory>(this.attach_CreditCardChangeHistories), new Action<CreditCardChangeHistory>(this.detach_CreditCardChangeHistories));
			this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Area = default(EntityRef<Area>);
			this._Bank = default(EntityRef<Bank>);
			this._BillingType = default(EntityRef<BillingType>);
			this._Branch = default(EntityRef<Branch>);
			this._CreditCardType = default(EntityRef<CreditCardType>);
			this._Customer1 = default(EntityRef<Customer>);
			this._School = default(EntityRef<School>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(100)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCardNo", DbType="VarChar(20)")]
		public string IDCardNo
		{
			get
			{
				return this._IDCardNo;
			}
			set
			{
				if ((this._IDCardNo != value))
				{
					this.OnIDCardNoChanging(value);
					this.SendPropertyChanging();
					this._IDCardNo = value;
					this.SendPropertyChanged("IDCardNo");
					this.OnIDCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(5)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailingAddress", DbType="VarChar(500)")]
		public string MailingAddress
		{
			get
			{
				return this._MailingAddress;
			}
			set
			{
				if ((this._MailingAddress != value))
				{
					this.OnMailingAddressChanging(value);
					this.SendPropertyChanging();
					this._MailingAddress = value;
					this.SendPropertyChanged("MailingAddress");
					this.OnMailingAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailingZipCode", DbType="VarChar(5)")]
		public string MailingZipCode
		{
			get
			{
				return this._MailingZipCode;
			}
			set
			{
				if ((this._MailingZipCode != value))
				{
					this.OnMailingZipCodeChanging(value);
					this.SendPropertyChanging();
					this._MailingZipCode = value;
					this.SendPropertyChanged("MailingZipCode");
					this.OnMailingZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="VarChar(20)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone1", DbType="VarChar(20)")]
		public string CellPhone1
		{
			get
			{
				return this._CellPhone1;
			}
			set
			{
				if ((this._CellPhone1 != value))
				{
					this.OnCellPhone1Changing(value);
					this.SendPropertyChanging();
					this._CellPhone1 = value;
					this.SendPropertyChanged("CellPhone1");
					this.OnCellPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone2", DbType="VarChar(20)")]
		public string CellPhone2
		{
			get
			{
				return this._CellPhone2;
			}
			set
			{
				if ((this._CellPhone2 != value))
				{
					this.OnCellPhone2Changing(value);
					this.SendPropertyChanging();
					this._CellPhone2 = value;
					this.SendPropertyChanged("CellPhone2");
					this.OnCellPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeBranchID", DbType="Int")]
		public System.Nullable<int> HomeBranchID
		{
			get
			{
				return this._HomeBranchID;
			}
			set
			{
				if ((this._HomeBranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHomeBranchIDChanging(value);
					this.SendPropertyChanging();
					this._HomeBranchID = value;
					this.SendPropertyChanged("HomeBranchID");
					this.OnHomeBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID", DbType="Int")]
		public System.Nullable<int> AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					if (this._Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AreaID = value;
					this.SendPropertyChanged("AreaID");
					this.OnAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartnerID", DbType="Int")]
		public System.Nullable<int> PartnerID
		{
			get
			{
				return this._PartnerID;
			}
			set
			{
				if ((this._PartnerID != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartnerIDChanging(value);
					this.SendPropertyChanging();
					this._PartnerID = value;
					this.SendPropertyChanged("PartnerID");
					this.OnPartnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNo", DbType="VarChar(20)")]
		public string CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this.OnCardNoChanging(value);
					this.SendPropertyChanging();
					this._CardNo = value;
					this.SendPropertyChanged("CardNo");
					this.OnCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardHolderName", DbType="VarChar(50)")]
		public string CardHolderName
		{
			get
			{
				return this._CardHolderName;
			}
			set
			{
				if ((this._CardHolderName != value))
				{
					this.OnCardHolderNameChanging(value);
					this.SendPropertyChanging();
					this._CardHolderName = value;
					this.SendPropertyChanged("CardHolderName");
					this.OnCardHolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardHolderID", DbType="VarChar(20)")]
		public string CardHolderID
		{
			get
			{
				return this._CardHolderID;
			}
			set
			{
				if ((this._CardHolderID != value))
				{
					this.OnCardHolderIDChanging(value);
					this.SendPropertyChanging();
					this._CardHolderID = value;
					this.SendPropertyChanged("CardHolderID");
					this.OnCardHolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int")]
		public System.Nullable<int> BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					if (this._Bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingTypeID", DbType="Int NOT NULL")]
		public int BillingTypeID
		{
			get
			{
				return this._BillingTypeID;
			}
			set
			{
				if ((this._BillingTypeID != value))
				{
					if (this._BillingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BillingTypeID = value;
					this.SendPropertyChanged("BillingTypeID");
					this.OnBillingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardTypeID", DbType="Int")]
		public System.Nullable<int> CreditCardTypeID
		{
			get
			{
				return this._CreditCardTypeID;
			}
			set
			{
				if ((this._CreditCardTypeID != value))
				{
					if (this._CreditCardType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreditCardTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CreditCardTypeID = value;
					this.SendPropertyChanged("CreditCardTypeID");
					this.OnCreditCardTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiredDate
		{
			get
			{
				return this._ExpiredDate;
			}
			set
			{
				if ((this._ExpiredDate != value))
				{
					this.OnExpiredDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiredDate = value;
					this.SendPropertyChanged("ExpiredDate");
					this.OnExpiredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarChar(50)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this.OnCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._CreatedWhen = value;
					this.SendPropertyChanged("CreatedWhen");
					this.OnCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedWho
		{
			get
			{
				return this._CreatedWho;
			}
			set
			{
				if ((this._CreatedWho != value))
				{
					this.OnCreatedWhoChanging(value);
					this.SendPropertyChanging();
					this._CreatedWho = value;
					this.SendPropertyChanged("CreatedWho");
					this.OnCreatedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime ChangedWhen
		{
			get
			{
				return this._ChangedWhen;
			}
			set
			{
				if ((this._ChangedWhen != value))
				{
					this.OnChangedWhenChanging(value);
					this.SendPropertyChanging();
					this._ChangedWhen = value;
					this.SendPropertyChanged("ChangedWhen");
					this.OnChangedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedWho", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ChangedWho
		{
			get
			{
				return this._ChangedWho;
			}
			set
			{
				if ((this._ChangedWho != value))
				{
					this.OnChangedWhoChanging(value);
					this.SendPropertyChanging();
					this._ChangedWho = value;
					this.SendPropertyChanged("ChangedWho");
					this.OnChangedWhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					if (this._School.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_BillingDetail", Storage="_BillingDetails", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<BillingDetail> BillingDetails
		{
			get
			{
				return this._BillingDetails;
			}
			set
			{
				this._BillingDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ChangeStatusDocument", Storage="_ChangeStatusDocuments", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<ChangeStatusDocument> ChangeStatusDocuments
		{
			get
			{
				return this._ChangeStatusDocuments;
			}
			set
			{
				this._ChangeStatusDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CheckInLog", Storage="_CheckInLogs", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<CheckInLog> CheckInLogs
		{
			get
			{
				return this._CheckInLogs;
			}
			set
			{
				this._CheckInLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ClassAttendance", Storage="_ClassAttendances", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<ClassAttendance> ClassAttendances
		{
			get
			{
				return this._ClassAttendances;
			}
			set
			{
				this._ClassAttendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerNote", Storage="_CustomerNotes", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<CustomerNote> CustomerNotes
		{
			get
			{
				return this._CustomerNotes;
			}
			set
			{
				this._CustomerNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerStatusHistory", Storage="_CustomerStatusHistories", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<CustomerStatusHistory> CustomerStatusHistories
		{
			get
			{
				return this._CustomerStatusHistories;
			}
			set
			{
				this._CustomerStatusHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_InvoiceHeader", Storage="_InvoiceHeaders", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<InvoiceHeader> InvoiceHeaders
		{
			get
			{
				return this._InvoiceHeaders;
			}
			set
			{
				this._InvoiceHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Person", Storage="_Persons", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CreditCardChangeHistory", Storage="_CreditCardChangeHistories", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<CreditCardChangeHistory> CreditCardChangeHistories
		{
			get
			{
				return this._CreditCardChangeHistories;
			}
			set
			{
				this._CreditCardChangeHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Contract", Storage="_Contracts", ThisKey="ID", OtherKey="CustomerID")]
		public EntitySet<Contract> Contracts
		{
			get
			{
				return this._Contracts;
			}
			set
			{
				this._Contracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer", Storage="_Customers", ThisKey="ID", OtherKey="PartnerID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Customer", Storage="_Area", ThisKey="AreaID", OtherKey="ID", IsForeignKey=true)]
		public Area Area
		{
			get
			{
				return this._Area.Entity;
			}
			set
			{
				Area previousValue = this._Area.Entity;
				if (((previousValue != value) 
							|| (this._Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Area.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._AreaID = value.ID;
					}
					else
					{
						this._AreaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Customer", Storage="_Bank", ThisKey="BankID", OtherKey="ID", IsForeignKey=true)]
		public Bank Bank
		{
			get
			{
				return this._Bank.Entity;
			}
			set
			{
				Bank previousValue = this._Bank.Entity;
				if (((previousValue != value) 
							|| (this._Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Bank.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._BankID = value.ID;
					}
					else
					{
						this._BankID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingType_Customer", Storage="_BillingType", ThisKey="BillingTypeID", OtherKey="ID", IsForeignKey=true)]
		public BillingType BillingType
		{
			get
			{
				return this._BillingType.Entity;
			}
			set
			{
				BillingType previousValue = this._BillingType.Entity;
				if (((previousValue != value) 
							|| (this._BillingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillingType.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._BillingType.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._BillingTypeID = value.ID;
					}
					else
					{
						this._BillingTypeID = default(int);
					}
					this.SendPropertyChanged("BillingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Customer", Storage="_Branch", ThisKey="HomeBranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._HomeBranchID = value.ID;
					}
					else
					{
						this._HomeBranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCardType_Customer", Storage="_CreditCardType", ThisKey="CreditCardTypeID", OtherKey="ID", IsForeignKey=true)]
		public CreditCardType CreditCardType
		{
			get
			{
				return this._CreditCardType.Entity;
			}
			set
			{
				CreditCardType previousValue = this._CreditCardType.Entity;
				if (((previousValue != value) 
							|| (this._CreditCardType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditCardType.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._CreditCardType.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._CreditCardTypeID = value.ID;
					}
					else
					{
						this._CreditCardTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CreditCardType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer", Storage="_Customer1", ThisKey="PartnerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._PartnerID = value.ID;
					}
					else
					{
						this._PartnerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_Customer", Storage="_School", ThisKey="SchoolID", OtherKey="ID", IsForeignKey=true)]
		public School School
		{
			get
			{
				return this._School.Entity;
			}
			set
			{
				School previousValue = this._School.Entity;
				if (((previousValue != value) 
							|| (this._School.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._School.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._School.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._SchoolID = value.ID;
					}
					else
					{
						this._SchoolID = default(Nullable<int>);
					}
					this.SendPropertyChanged("School");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BillingDetails(BillingDetail entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_BillingDetails(BillingDetail entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ChangeStatusDocuments(ChangeStatusDocument entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ChangeStatusDocuments(ChangeStatusDocument entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CheckInLogs(CheckInLog entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CheckInLogs(CheckInLog entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_ClassAttendances(ClassAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ClassAttendances(ClassAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerNotes(CustomerNote entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerNotes(CustomerNote entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerStatusHistories(CustomerStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerStatusHistories(CustomerStatusHistory entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CreditCardChangeHistories(CreditCardChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CreditCardChangeHistories(CreditCardChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Contracts(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
	}
}
#pragma warning restore 1591
